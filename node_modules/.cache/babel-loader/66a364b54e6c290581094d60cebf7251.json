{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/index.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/index.js","mtime":1596450117000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/index.js"],"names":["he","parseHTML","parseText","parseFilters","genAssignmentCode","extend","cached","no","camelize","hyphenate","hasOwn","isIE","isEdge","isServerRendering","addProp","addAttr","baseWarn","addHandler","addDirective","getBindingAttr","getAndRemoveAttr","getRawBindingAttr","pluckModuleFunction","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","argRE","bindRE","propBindRE","modifierRE","lineBreakRE","whitespaceRE","decodeHTMLCached","decode","warn","delimiters","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","maybeComponent","createASTElement","tag","attrs","parent","type","attrsList","attrsMap","makeAttrsMap","rawAttrsMap","children","parse","template","options","isPreTag","mustUseProp","getTagNamespace","isReservedTag","el","component","modules","stack","preserveWhitespace","whitespaceOption","whitespace","root","currentParent","inVPre","inPre","warned","warnOnce","msg","range","closeElement","element","processed","processElement","length","if","elseif","else","process","env","NODE_ENV","checkRootConstraints","addIfCondition","exp","block","start","forbidden","processIfConditions","slotScope","name","slotTarget","scopedSlots","push","pre","i","expectHTML","isUnaryTag","canBeLeftOpenTag","shouldDecodeNewlines","shouldDecodeNewlinesForHref","shouldKeepComment","comments","outputSourceRange","unary","ns","guardIESVGBug","reduce","cumulated","attr","isForbiddenTag","processPre","processRawAttrs","processFor","processIf","processOnce","end","lastNode","text","pop","chars","trim","placeholder","isTextTag","test","replace","res","child","expression","tokens","comment","isComment","list","len","Array","value","JSON","stringify","plain","processKey","key","processRef","processSlot","processComponent","processAttrs","for","iterator","iterator2","iterator1","ref","refInFor","checkInFor","parseFor","inMatch","match","alias","iteratorMatch","prev","findPrevElement","condition","ifConditions","once","slotName","nodeHas$Slot","childrenHas$Slot","processScopedSlots","some","$slotRE","node","has$Slot","groups","target","group","slots","slotContainer","filter","c","indexOf","binding","inlineTemplate","l","rawName","modifiers","isProp","syncGen","hasBindings","parseModifiers","prop","slice","camel","sync","argMatch","arg","checkForAliasModel","undefined","ret","forEach","m","map","ieNSBug","ieNSPrefix","_el"],"mappings":"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","sourcesContent":["/*       */\n\nimport he from 'he'\nimport {parseHTML} from './html-parser'\nimport {parseText} from './text-parser'\nimport {parseFilters} from './filter-parser'\nimport {genAssignmentCode} from '../directives/model'\nimport {extend, cached, no, camelize, hyphenate, hasOwn} from '../../shared/util'\nimport {isIE, isEdge, isServerRendering} from '../../core/util/env'\n\nimport {\n  addProp,\n  addAttr,\n  baseWarn,\n  addHandler,\n  addDirective,\n  getBindingAttr,\n  getAndRemoveAttr,\n  getRawBindingAttr,\n  pluckModuleFunction\n} from '../helpers'\n\nexport const onRE = /^@|^v-on:/\nexport const dirRE = /^v-|^@|^:|^\\./\nexport const forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/\nexport const forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/\nconst stripParensRE = /^\\(|\\)$/g\n\nconst argRE = /:(.*)$/\nexport const bindRE = /^:|^\\.|^v-bind:/\nconst propBindRE = /^\\./\nconst modifierRE = /\\.[^.]+/g\n\nconst lineBreakRE = /[\\r\\n]/\nconst whitespaceRE = /\\s+/g\n\nconst decodeHTMLCached = cached(he.decode)\n\n// configurable state\nexport let warn\nlet delimiters\nlet transforms\nlet preTransforms\nlet postTransforms\nlet platformIsPreTag\nlet platformMustUseProp\nlet platformGetTagNamespace\nlet maybeComponent\n\nexport function createASTElement(\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nexport function parse(\n  template,\n  options\n) {\n  warn = options.warn || baseWarn\n\n  platformIsPreTag = options.isPreTag || no\n  platformMustUseProp = options.mustUseProp || no\n  platformGetTagNamespace = options.getTagNamespace || no\n  const isReservedTag = options.isReservedTag || no\n  maybeComponent = (el) => !!el.component || !isReservedTag(el.tag)\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode')\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode')\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode')\n\n  delimiters = options.delimiters\n\n  const stack = []\n  const preserveWhitespace = options.preserveWhitespace !== false\n  const whitespaceOption = options.whitespace\n  let root\n  let currentParent\n  let inVPre = false\n  let inPre = false\n  let warned = false\n\n  function warnOnce(msg, range) {\n    if (!warned) {\n      warned = true\n      warn(msg, range)\n    }\n  }\n\n  function closeElement(element) {\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options)\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element)\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        })\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          `Component template should contain exactly one root element. ` +\n          `If you are using v-if on multiple elements, ` +\n          `use v-else-if to chain them instead.`,\n          {start: element.start}\n        )\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent)\n      } else if (element.slotScope) { // scoped slot\n        const name = element.slotTarget || '\"default\"'\n        ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element\n      } else {\n        currentParent.children.push(element)\n        element.parent = currentParent\n      }\n    }\n    // check pre state\n    if (element.pre) {\n      inVPre = false\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false\n    }\n    // apply post-transforms\n    for (let i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options)\n    }\n  }\n\n  function checkRootConstraints(el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        `Cannot use <${el.tag}> as component root element because it may ` +\n        'contain multiple nodes.',\n        {start: el.start}\n      )\n    }\n    if (hasOwn(el.attrsMap, 'v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      )\n    }\n  }\n\n  parseHTML(template, {\n    warn,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start(tag, attrs, unary, start) {\n      // check namespace.\n      // inherit parent ns if there is one\n      const ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag)\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs)\n      }\n\n      let element = createASTElement(tag, attrs, currentParent)\n      if (ns) {\n        element.ns = ns\n      }\n\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.start = start\n        element.rawAttrsMap = element.attrsList.reduce((cumulated, attr) => {\n          cumulated[attr.name] = attr\n          return cumulated\n        }, {})\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true\n        process.env.NODE_ENV !== 'production' && warn(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          `<${tag}>` + ', as they will not be parsed.',\n          {start: element.start}\n        )\n      }\n\n      // apply pre-transforms\n      for (let i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element\n      }\n\n      if (!inVPre) {\n        processPre(element)\n        if (element.pre) {\n          inVPre = true\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true\n      }\n      if (inVPre) {\n        processRawAttrs(element)\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element)\n        processIf(element)\n        processOnce(element)\n      }\n\n      if (!root) {\n        root = element\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root)\n        }\n      }\n\n      if (!unary) {\n        currentParent = element\n        stack.push(element)\n      } else {\n        closeElement(element)\n      }\n    },\n\n    end(tag, start, end) {\n      const element = stack[stack.length - 1]\n      if (!inPre) {\n        // remove trailing whitespace node\n        const lastNode = element.children[element.children.length - 1]\n        if (lastNode && lastNode.type === 3 && lastNode.text === ' ') {\n          element.children.pop()\n        }\n      }\n      // pop stack\n      stack.length -= 1\n      currentParent = stack[stack.length - 1]\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end\n      }\n      closeElement(element)\n    },\n\n    chars(text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              {start}\n            )\n          } else if ((text = text.trim())) {\n            warnOnce(\n              `text \"${text}\" outside root element will be ignored.`,\n              {start}\n            )\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      const children = currentParent.children\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text)\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = ''\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' '\n        } else {\n          text = ' '\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : ''\n      }\n      if (text) {\n        if (whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE, ' ')\n        }\n        let res\n        let child\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text\n          }\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text\n          }\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start\n            child.end = end\n          }\n          children.push(child)\n        }\n      }\n    },\n    comment(text, start, end) {\n      const child = {\n        type: 3,\n        text,\n        isComment: true\n      }\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        child.start = start\n        child.end = end\n      }\n      currentParent.children.push(child)\n    }\n  })\n  return root\n}\n\nfunction processPre(el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true\n  }\n}\n\nfunction processRawAttrs(el) {\n  const list = el.attrsList\n  const len = list.length\n  if (len) {\n    const attrs = el.attrs = new Array(len)\n    for (let i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      }\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start\n        attrs[i].end = list[i].end\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true\n  }\n}\n\nexport function processElement(\n  element,\n  options\n) {\n  processKey(element)\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  )\n\n  processRef(element)\n  processSlot(element)\n  processComponent(element)\n  for (let i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element\n  }\n  processAttrs(element)\n  return element\n}\n\nfunction processKey(el) {\n  const exp = getBindingAttr(el, 'key')\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn(\n          `<template> cannot be keyed. Place the key on real elements instead.`,\n          getRawBindingAttr(el, 'key')\n        )\n      }\n      if (el.for) {\n        const iterator = el.iterator2 || el.iterator1\n        const parent = el.parent\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn(\n            `Do not use v-for index as key on <transition-group> children, ` +\n            `this is the same as not using keys.`,\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          )\n        }\n      }\n    }\n    el.key = exp\n  }\n}\n\nfunction processRef(el) {\n  const ref = getBindingAttr(el, 'ref')\n  if (ref) {\n    el.ref = ref\n    el.refInFor = checkInFor(el)\n  }\n}\n\nexport function processFor(el) {\n  let exp\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    const res = parseFor(exp)\n    if (res) {\n      extend(el, res)\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(\n        `Invalid v-for expression: ${exp}`,\n        el.rawAttrsMap['v-for']\n      )\n    }\n  }\n}\n\n\nexport function parseFor(exp) {\n  const inMatch = exp.match(forAliasRE)\n  if (!inMatch) return\n  const res = {}\n  res.for = inMatch[2].trim()\n  const alias = inMatch[1].trim().replace(stripParensRE, '')\n  const iteratorMatch = alias.match(forIteratorRE)\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim()\n    res.iterator1 = iteratorMatch[1].trim()\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim()\n    }\n  } else {\n    res.alias = alias\n  }\n  return res\n}\n\nfunction processIf(el) {\n  const exp = getAndRemoveAttr(el, 'v-if')\n  if (exp) {\n    el.if = exp\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    })\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true\n    }\n    const elseif = getAndRemoveAttr(el, 'v-else-if')\n    if (elseif) {\n      el.elseif = elseif\n    }\n  }\n}\n\nfunction processIfConditions(el, parent) {\n  const prev = findPrevElement(parent.children)\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    })\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `v-${el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else'} ` +\n      `used on element <${el.tag}> without corresponding v-if.`,\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    )\n  }\n}\n\nfunction findPrevElement(children) {\n  let i = children.length\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn(\n          `text \"${children[i].text.trim()}\" between v-if and v-else(-if) ` +\n          `will be ignored.`,\n          children[i]\n        )\n      }\n      children.pop()\n    }\n  }\n}\n\nexport function addIfCondition(el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = []\n  }\n  el.ifConditions.push(condition)\n}\n\nfunction processOnce(el) {\n  const once = getAndRemoveAttr(el, 'v-once')\n  if (once != null) {\n    el.once = true\n  }\n}\n\nfunction processSlot(el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name')\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn(\n        `\\`key\\` does not work on <slot> because slots are abstract outlets ` +\n        `and can possibly expand into multiple elements. ` +\n        `Use the key on a wrapping element instead.`,\n        getRawBindingAttr(el, 'key')\n      )\n    }\n  } else {\n    let slotScope\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope')\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn(\n          `the \"scope\" attribute for scoped slots have been deprecated and ` +\n          `replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute ` +\n          `can also be used on plain elements in addition to <template> to ` +\n          `denote scoped slots.`,\n          el.rawAttrsMap['scope'],\n          true\n        )\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope')\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn(\n          `Ambiguous combined usage of slot-scope and v-for on <${el.tag}> ` +\n          `(v-for takes higher priority). Use a wrapper <template> for the ` +\n          `scoped slot to make it clearer.`,\n          el.rawAttrsMap['slot-scope'],\n          true\n        )\n      }\n      el.slotScope = slotScope\n      if (process.env.NODE_ENV !== 'production' && nodeHas$Slot(el)) {\n        warn('Unepxected mixed usage of `slot-scope` and `$slot`.', el)\n      }\n    } else {\n      // 2.6 $slot support\n      // Context: https://github.com/vuejs/vue/issues/9180\n      // Ideally, all slots should be compiled as functions (this is what we\n      // are doing in 3.x), but for 2.x e want to preserve complete backwards\n      // compatibility, and maintain the exact same compilation output for any\n      // code that does not use the new syntax.\n\n      // recursively check component children for presence of `$slot` in all\n      // expressions until running into a nested child component.\n      if (maybeComponent(el) && childrenHas$Slot(el)) {\n        processScopedSlots(el)\n      }\n    }\n    const slotTarget = getBindingAttr(el, 'slot')\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope && !nodeHas$Slot(el)) {\n        addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'))\n      }\n    }\n  }\n}\n\nfunction childrenHas$Slot(el) {\n  return el.children ? el.children.some(nodeHas$Slot) : false\n}\n\nconst $slotRE = /(^|[^\\w_$])\\$slot($|[^\\w_$])/\n\nfunction nodeHas$Slot(node) {\n  // caching\n  if (hasOwn(node, 'has$Slot')) {\n    return (node.has$Slot)\n  }\n  if (node.type === 1) { // element\n    for (const key in node.attrsMap) {\n      if (dirRE.test(key) && $slotRE.test(node.attrsMap[key])) {\n        return (node.has$Slot = true)\n      }\n    }\n    return (node.has$Slot = childrenHas$Slot(node))\n  } else if (node.type === 2) { // expression\n    // TODO more robust logic for checking $slot usage\n    return (node.has$Slot = $slotRE.test(node.expression))\n  }\n  return false\n}\n\nfunction processScopedSlots(el) {\n  // 1. group children by slot target\n  const groups = {}\n  for (let i = 0; i < el.children.length; i++) {\n    const child = el.children[i]\n    const target = child.slotTarget || '\"default\"'\n    if (!groups[target]) {\n      groups[target] = []\n    }\n    groups[target].push(child)\n  }\n  // 2. for each slot group, check if the group contains $slot\n  for (const name in groups) {\n    const group = groups[name]\n    if (group.some(nodeHas$Slot)) {\n      // 3. if a group contains $slot, all nodes in that group gets assigned\n      // as a scoped slot to el and removed from children\n      el.plain = false\n      const slots = el.scopedSlots || (el.scopedSlots = {})\n      const slotContainer = slots[name] = createASTElement('template', [], el)\n      slotContainer.children = group\n      slotContainer.slotScope = '$slot'\n      el.children = el.children.filter(c => group.indexOf(c) === -1)\n    }\n  }\n}\n\nfunction processComponent(el) {\n  let binding\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true\n  }\n}\n\nfunction processAttrs(el) {\n  const list = el.attrsList\n  let i, l, name, rawName, value, modifiers, isProp, syncGen\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name\n    value = list[i].value\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''))\n      // support .foo shorthand syntax for the .prop modifier\n      if (propBindRE.test(name)) {\n        (modifiers || (modifiers = {})).prop = true\n        name = `.` + name.slice(1).replace(modifierRE, '')\n      } else if (modifiers) {\n        name = name.replace(modifierRE, '')\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '')\n        value = parseFilters(value)\n        isProp = false\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn(\n            `The value for a v-bind expression cannot be empty. Found in \"v-bind:${name}\"`\n          )\n        }\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true\n            name = camelize(name)\n            if (name === 'innerHtml') name = 'innerHTML'\n          }\n          if (modifiers.camel) {\n            name = camelize(name)\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, `$event`)\n            addHandler(\n              el,\n              `update:${camelize(name)}`,\n              syncGen,\n              null,\n              false,\n              warn,\n              list[i]\n            )\n            if (hyphenate(name) !== camelize(name)) {\n              addHandler(\n                el,\n                `update:${hyphenate(name)}`,\n                syncGen,\n                null,\n                false,\n                warn,\n                list[i]\n              )\n            }\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i])\n        } else {\n          addAttr(el, name, value, list[i])\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '')\n        addHandler(el, name, value, modifiers, false, warn, list[i])\n      } else { // normal directives\n        name = name.replace(dirRE, '')\n        // parse arg\n        const argMatch = name.match(argRE)\n        const arg = argMatch && argMatch[1]\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1))\n        }\n        addDirective(el, name, rawName, value, arg, modifiers, list[i])\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value)\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        const res = parseText(value, delimiters)\n        if (res) {\n          warn(\n            `${name}=\"${value}\": ` +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          )\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i])\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n        name === 'muted' &&\n        platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i])\n      }\n    }\n  }\n}\n\nfunction checkInFor(el) {\n  let parent = el\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent\n  }\n  return false\n}\n\nfunction parseModifiers(name) {\n  const match = name.match(modifierRE)\n  if (match) {\n    const ret = {}\n    match.forEach(m => {\n      ret[m.slice(1)] = true\n    })\n    return ret\n  }\n}\n\nfunction makeAttrsMap(attrs) {\n  const map = {}\n  for (let i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn('duplicate attribute: ' + attrs[i].name, attrs[i])\n    }\n    map[attrs[i].name] = attrs[i].value\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag(el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag(el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nconst ieNSBug = /^xmlns:NS\\d+/\nconst ieNSPrefix = /^NS\\d+:/\n\n/* istanbul ignore next */\nfunction guardIESVGBug(attrs) {\n  const res = []\n  for (let i = 0; i < attrs.length; i++) {\n    const attr = attrs[i]\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '')\n      res.push(attr)\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel(el, value) {\n  let _el = el\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn(\n        `<${el.tag} v-model=\"${value}\">: ` +\n        `You are binding v-model directly to a v-for iteration alias. ` +\n        `This will not be able to modify the v-for source array because ` +\n        `writing to the alias is like modifying a function local variable. ` +\n        `Consider using an array of objects and use v-model on an object property instead.`,\n        el.rawAttrsMap['v-model']\n      )\n    }\n    _el = _el.parent\n  }\n}\n"]}]}