{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/traverse.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/traverse.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmlzLWZyb3plbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKCi8qICAgICAgICovCmltcG9ydCB7IF9TZXQgYXMgU2V0LCBpc09iamVjdCB9IGZyb20gJy4uL3V0aWwvaW5kZXgnOwppbXBvcnQgVk5vZGUgZnJvbSAnLi4vdmRvbS92bm9kZSc7CnZhciBzZWVuT2JqZWN0cyA9IG5ldyBTZXQoKTsKLyoqCiAqIFJlY3Vyc2l2ZWx5IHRyYXZlcnNlIGFuIG9iamVjdCB0byBldm9rZSBhbGwgY29udmVydGVkCiAqIGdldHRlcnMsIHNvIHRoYXQgZXZlcnkgbmVzdGVkIHByb3BlcnR5IGluc2lkZSB0aGUgb2JqZWN0CiAqIGlzIGNvbGxlY3RlZCBhcyBhICJkZWVwIiBkZXBlbmRlbmN5LgogKi8KCmV4cG9ydCBmdW5jdGlvbiB0cmF2ZXJzZSh2YWwpIHsKICBfdHJhdmVyc2UodmFsLCBzZWVuT2JqZWN0cyk7CgogIHNlZW5PYmplY3RzLmNsZWFyKCk7Cn0KCmZ1bmN0aW9uIF90cmF2ZXJzZSh2YWwsIHNlZW4pIHsKICB2YXIgaSwga2V5czsKICB2YXIgaXNBID0gQXJyYXkuaXNBcnJheSh2YWwpOwoKICBpZiAoIWlzQSAmJiAhaXNPYmplY3QodmFsKSB8fCBPYmplY3QuaXNGcm96ZW4odmFsKSB8fCB2YWwgaW5zdGFuY2VvZiBWTm9kZSkgewogICAgcmV0dXJuOwogIH0KCiAgaWYgKHZhbC5fX29iX18pIHsKICAgIHZhciBkZXBJZCA9IHZhbC5fX29iX18uZGVwLmlkOwoKICAgIGlmIChzZWVuLmhhcyhkZXBJZCkpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHNlZW4uYWRkKGRlcElkKTsKICB9CgogIGlmIChpc0EpIHsKICAgIGkgPSB2YWwubGVuZ3RoOwoKICAgIHdoaWxlIChpLS0pIHsKICAgICAgX3RyYXZlcnNlKHZhbFtpXSwgc2Vlbik7CiAgICB9CiAgfSBlbHNlIHsKICAgIGtleXMgPSBPYmplY3Qua2V5cyh2YWwpOwogICAgaSA9IGtleXMubGVuZ3RoOwoKICAgIHdoaWxlIChpLS0pIHsKICAgICAgX3RyYXZlcnNlKHZhbFtrZXlzW2ldXSwgc2Vlbik7CiAgICB9CiAgfQp9"},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/traverse.js"],"names":["_Set","Set","isObject","VNode","seenObjects","traverse","val","_traverse","clear","seen","i","keys","isA","Array","isArray","Object","isFrozen","__ob__","depId","dep","id","has","add","length"],"mappings":";;;AAAA;AAEA,SAAQA,IAAI,IAAIC,GAAhB,EAAqBC,QAArB,QAAoC,eAApC;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,IAAMC,WAAW,GAAG,IAAIH,GAAJ,EAApB;AAEA;;;;;;AAKA,OAAO,SAASI,QAAT,CAAkBC,GAAlB,EAAuB;AAC5BC,EAAAA,SAAS,CAACD,GAAD,EAAMF,WAAN,CAAT;;AACAA,EAAAA,WAAW,CAACI,KAAZ;AACD;;AAED,SAASD,SAAT,CAAmBD,GAAnB,EAAwBG,IAAxB,EAA8B;AAC5B,MAAIC,CAAJ,EAAOC,IAAP;AACA,MAAMC,GAAG,GAAGC,KAAK,CAACC,OAAN,CAAcR,GAAd,CAAZ;;AACA,MAAK,CAACM,GAAD,IAAQ,CAACV,QAAQ,CAACI,GAAD,CAAlB,IAA4BS,MAAM,CAACC,QAAP,CAAgBV,GAAhB,CAA5B,IAAoDA,GAAG,YAAYH,KAAvE,EAA8E;AAC5E;AACD;;AACD,MAAIG,GAAG,CAACW,MAAR,EAAgB;AACd,QAAMC,KAAK,GAAGZ,GAAG,CAACW,MAAJ,CAAWE,GAAX,CAAeC,EAA7B;;AACA,QAAIX,IAAI,CAACY,GAAL,CAASH,KAAT,CAAJ,EAAqB;AACnB;AACD;;AACDT,IAAAA,IAAI,CAACa,GAAL,CAASJ,KAAT;AACD;;AACD,MAAIN,GAAJ,EAAS;AACPF,IAAAA,CAAC,GAAGJ,GAAG,CAACiB,MAAR;;AACA,WAAOb,CAAC,EAAR;AAAYH,MAAAA,SAAS,CAACD,GAAG,CAACI,CAAD,CAAJ,EAASD,IAAT,CAAT;AAAZ;AACD,GAHD,MAGO;AACLE,IAAAA,IAAI,GAAGI,MAAM,CAACJ,IAAP,CAAYL,GAAZ,CAAP;AACAI,IAAAA,CAAC,GAAGC,IAAI,CAACY,MAAT;;AACA,WAAOb,CAAC,EAAR;AAAYH,MAAAA,SAAS,CAACD,GAAG,CAACK,IAAI,CAACD,CAAD,CAAL,CAAJ,EAAeD,IAAf,CAAT;AAAZ;AACD;AACF","sourcesContent":["/*       */\n\nimport {_Set as Set, isObject} from '../util/index'\n\nimport VNode from '../vdom/vnode'\n\nconst seenObjects = new Set()\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nexport function traverse(val) {\n  _traverse(val, seenObjects)\n  seenObjects.clear()\n}\n\nfunction _traverse(val, seen) {\n  let i, keys\n  const isA = Array.isArray(val)\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    const depId = val.__ob__.dep.id\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId)\n  }\n  if (isA) {\n    i = val.length\n    while (i--) _traverse(val[i], seen)\n  } else {\n    keys = Object.keys(val)\n    i = keys.length\n    while (i--) _traverse(val[keys[i]], seen)\n  }\n}\n"]}]}