{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/filter-parser.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/filter-parser.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKCi8qICAgICAgICovCnZhciB2YWxpZERpdmlzaW9uQ2hhclJFID0gL1tcdykuK1wtXyRcXV0vOwpleHBvcnQgZnVuY3Rpb24gcGFyc2VGaWx0ZXJzKGV4cCkgewogIHZhciBpblNpbmdsZSA9IGZhbHNlOwogIHZhciBpbkRvdWJsZSA9IGZhbHNlOwogIHZhciBpblRlbXBsYXRlU3RyaW5nID0gZmFsc2U7CiAgdmFyIGluUmVnZXggPSBmYWxzZTsKICB2YXIgY3VybHkgPSAwOwogIHZhciBzcXVhcmUgPSAwOwogIHZhciBwYXJlbiA9IDA7CiAgdmFyIGxhc3RGaWx0ZXJJbmRleCA9IDA7CiAgdmFyIGMsIHByZXYsIGksIGV4cHJlc3Npb24sIGZpbHRlcnM7CgogIGZvciAoaSA9IDA7IGkgPCBleHAubGVuZ3RoOyBpKyspIHsKICAgIHByZXYgPSBjOwogICAgYyA9IGV4cC5jaGFyQ29kZUF0KGkpOwoKICAgIGlmIChpblNpbmdsZSkgewogICAgICBpZiAoYyA9PT0gMHgyNyAmJiBwcmV2ICE9PSAweDVDKSBpblNpbmdsZSA9IGZhbHNlOwogICAgfSBlbHNlIGlmIChpbkRvdWJsZSkgewogICAgICBpZiAoYyA9PT0gMHgyMiAmJiBwcmV2ICE9PSAweDVDKSBpbkRvdWJsZSA9IGZhbHNlOwogICAgfSBlbHNlIGlmIChpblRlbXBsYXRlU3RyaW5nKSB7CiAgICAgIGlmIChjID09PSAweDYwICYmIHByZXYgIT09IDB4NUMpIGluVGVtcGxhdGVTdHJpbmcgPSBmYWxzZTsKICAgIH0gZWxzZSBpZiAoaW5SZWdleCkgewogICAgICBpZiAoYyA9PT0gMHgyZiAmJiBwcmV2ICE9PSAweDVDKSBpblJlZ2V4ID0gZmFsc2U7CiAgICB9IGVsc2UgaWYgKGMgPT09IDB4N0MgJiYgLy8gcGlwZQogICAgZXhwLmNoYXJDb2RlQXQoaSArIDEpICE9PSAweDdDICYmIGV4cC5jaGFyQ29kZUF0KGkgLSAxKSAhPT0gMHg3QyAmJiAhY3VybHkgJiYgIXNxdWFyZSAmJiAhcGFyZW4pIHsKICAgICAgaWYgKGV4cHJlc3Npb24gPT09IHVuZGVmaW5lZCkgewogICAgICAgIC8vIGZpcnN0IGZpbHRlciwgZW5kIG9mIGV4cHJlc3Npb24KICAgICAgICBsYXN0RmlsdGVySW5kZXggPSBpICsgMTsKICAgICAgICBleHByZXNzaW9uID0gZXhwLnNsaWNlKDAsIGkpLnRyaW0oKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBwdXNoRmlsdGVyKCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHN3aXRjaCAoYykgewogICAgICAgIGNhc2UgMHgyMjoKICAgICAgICAgIGluRG91YmxlID0gdHJ1ZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vICIKCiAgICAgICAgY2FzZSAweDI3OgogICAgICAgICAgaW5TaW5nbGUgPSB0cnVlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gJwoKICAgICAgICBjYXNlIDB4NjA6CiAgICAgICAgICBpblRlbXBsYXRlU3RyaW5nID0gdHJ1ZTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vIGAKCiAgICAgICAgY2FzZSAweDI4OgogICAgICAgICAgcGFyZW4rKzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vICgKCiAgICAgICAgY2FzZSAweDI5OgogICAgICAgICAgcGFyZW4tLTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIC8vICkKCiAgICAgICAgY2FzZSAweDVCOgogICAgICAgICAgc3F1YXJlKys7CiAgICAgICAgICBicmVhazsKICAgICAgICAvLyBbCgogICAgICAgIGNhc2UgMHg1RDoKICAgICAgICAgIHNxdWFyZS0tOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gXQoKICAgICAgICBjYXNlIDB4N0I6CiAgICAgICAgICBjdXJseSsrOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gewoKICAgICAgICBjYXNlIDB4N0Q6CiAgICAgICAgICBjdXJseS0tOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8gfQogICAgICB9CgogICAgICBpZiAoYyA9PT0gMHgyZikgewogICAgICAgIC8vIC8KICAgICAgICB2YXIgaiA9IGkgLSAxOwogICAgICAgIHZhciBwID0gdm9pZCAwOyAvLyBmaW5kIGZpcnN0IG5vbi13aGl0ZXNwYWNlIHByZXYgY2hhcgoKICAgICAgICBmb3IgKDsgaiA+PSAwOyBqLS0pIHsKICAgICAgICAgIHAgPSBleHAuY2hhckF0KGopOwogICAgICAgICAgaWYgKHAgIT09ICcgJykgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICBpZiAoIXAgfHwgIXZhbGlkRGl2aXNpb25DaGFyUkUudGVzdChwKSkgewogICAgICAgICAgaW5SZWdleCA9IHRydWU7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKICBpZiAoZXhwcmVzc2lvbiA9PT0gdW5kZWZpbmVkKSB7CiAgICBleHByZXNzaW9uID0gZXhwLnNsaWNlKDAsIGkpLnRyaW0oKTsKICB9IGVsc2UgaWYgKGxhc3RGaWx0ZXJJbmRleCAhPT0gMCkgewogICAgcHVzaEZpbHRlcigpOwogIH0KCiAgZnVuY3Rpb24gcHVzaEZpbHRlcigpIHsKICAgIChmaWx0ZXJzIHx8IChmaWx0ZXJzID0gW10pKS5wdXNoKGV4cC5zbGljZShsYXN0RmlsdGVySW5kZXgsIGkpLnRyaW0oKSk7CiAgICBsYXN0RmlsdGVySW5kZXggPSBpICsgMTsKICB9CgogIGlmIChmaWx0ZXJzKSB7CiAgICBmb3IgKGkgPSAwOyBpIDwgZmlsdGVycy5sZW5ndGg7IGkrKykgewogICAgICBleHByZXNzaW9uID0gd3JhcEZpbHRlcihleHByZXNzaW9uLCBmaWx0ZXJzW2ldKTsKICAgIH0KICB9CgogIHJldHVybiBleHByZXNzaW9uOwp9CgpmdW5jdGlvbiB3cmFwRmlsdGVyKGV4cCwgZmlsdGVyKSB7CiAgdmFyIGkgPSBmaWx0ZXIuaW5kZXhPZignKCcpOwoKICBpZiAoaSA8IDApIHsKICAgIC8vIF9mOiByZXNvbHZlRmlsdGVyCiAgICByZXR1cm4gIl9mKFwiIi5jb25jYXQoZmlsdGVyLCAiXCIpKCIpLmNvbmNhdChleHAsICIpIik7CiAgfSBlbHNlIHsKICAgIHZhciBuYW1lID0gZmlsdGVyLnNsaWNlKDAsIGkpOwogICAgdmFyIGFyZ3MgPSBmaWx0ZXIuc2xpY2UoaSArIDEpOwogICAgcmV0dXJuICJfZihcIiIuY29uY2F0KG5hbWUsICJcIikoIikuY29uY2F0KGV4cCkuY29uY2F0KGFyZ3MgIT09ICcpJyA/ICcsJyArIGFyZ3MgOiBhcmdzKTsKICB9Cn0="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/filter-parser.js"],"names":["validDivisionCharRE","parseFilters","exp","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","c","prev","i","expression","filters","length","charCodeAt","undefined","slice","trim","pushFilter","j","p","charAt","test","push","wrapFilter","filter","indexOf","name","args"],"mappings":";;;;;AAAA;AAEA,IAAMA,mBAAmB,GAAG,eAA5B;AAEA,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,QAAQ,GAAG,KAAf;AACA,MAAIC,gBAAgB,GAAG,KAAvB;AACA,MAAIC,OAAO,GAAG,KAAd;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,MAAM,GAAG,CAAb;AACA,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,CAAJ,EAAOC,IAAP,EAAaC,CAAb,EAAgBC,UAAhB,EAA4BC,OAA5B;;AAEA,OAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGX,GAAG,CAACc,MAApB,EAA4BH,CAAC,EAA7B,EAAiC;AAC/BD,IAAAA,IAAI,GAAGD,CAAP;AACAA,IAAAA,CAAC,GAAGT,GAAG,CAACe,UAAJ,CAAeJ,CAAf,CAAJ;;AACA,QAAIV,QAAJ,EAAc;AACZ,UAAIQ,CAAC,KAAK,IAAN,IAAcC,IAAI,KAAK,IAA3B,EAAiCT,QAAQ,GAAG,KAAX;AAClC,KAFD,MAEO,IAAIC,QAAJ,EAAc;AACnB,UAAIO,CAAC,KAAK,IAAN,IAAcC,IAAI,KAAK,IAA3B,EAAiCR,QAAQ,GAAG,KAAX;AAClC,KAFM,MAEA,IAAIC,gBAAJ,EAAsB;AAC3B,UAAIM,CAAC,KAAK,IAAN,IAAcC,IAAI,KAAK,IAA3B,EAAiCP,gBAAgB,GAAG,KAAnB;AAClC,KAFM,MAEA,IAAIC,OAAJ,EAAa;AAClB,UAAIK,CAAC,KAAK,IAAN,IAAcC,IAAI,KAAK,IAA3B,EAAiCN,OAAO,GAAG,KAAV;AAClC,KAFM,MAEA,IACLK,CAAC,KAAK,IAAN,IAAc;AACdT,IAAAA,GAAG,CAACe,UAAJ,CAAeJ,CAAC,GAAG,CAAnB,MAA0B,IAD1B,IAEAX,GAAG,CAACe,UAAJ,CAAeJ,CAAC,GAAG,CAAnB,MAA0B,IAF1B,IAGA,CAACN,KAHD,IAGU,CAACC,MAHX,IAGqB,CAACC,KAJjB,EAKL;AACA,UAAIK,UAAU,KAAKI,SAAnB,EAA8B;AAC5B;AACAR,QAAAA,eAAe,GAAGG,CAAC,GAAG,CAAtB;AACAC,QAAAA,UAAU,GAAGZ,GAAG,CAACiB,KAAJ,CAAU,CAAV,EAAaN,CAAb,EAAgBO,IAAhB,EAAb;AACD,OAJD,MAIO;AACLC,QAAAA,UAAU;AACX;AACF,KAbM,MAaA;AACL,cAAQV,CAAR;AACE,aAAK,IAAL;AACEP,UAAAA,QAAQ,GAAG,IAAX;AACA;AAAc;;AAChB,aAAK,IAAL;AACED,UAAAA,QAAQ,GAAG,IAAX;AACA;AAAc;;AAChB,aAAK,IAAL;AACEE,UAAAA,gBAAgB,GAAG,IAAnB;AACA;AAAM;;AACR,aAAK,IAAL;AACEI,UAAAA,KAAK;AACL;AAAsB;;AACxB,aAAK,IAAL;AACEA,UAAAA,KAAK;AACL;AAAsB;;AACxB,aAAK,IAAL;AACED,UAAAA,MAAM;AACN;AAAqB;;AACvB,aAAK,IAAL;AACEA,UAAAA,MAAM;AACN;AAAqB;;AACvB,aAAK,IAAL;AACED,UAAAA,KAAK;AACL;AAAsB;;AACxB,aAAK,IAAL;AACEA,UAAAA,KAAK;AACL;AAAsB;AA3B1B;;AA6BA,UAAII,CAAC,KAAK,IAAV,EAAgB;AAAE;AAChB,YAAIW,CAAC,GAAGT,CAAC,GAAG,CAAZ;AACA,YAAIU,CAAC,SAAL,CAFc,CAGd;;AACA,eAAOD,CAAC,IAAI,CAAZ,EAAeA,CAAC,EAAhB,EAAoB;AAClBC,UAAAA,CAAC,GAAGrB,GAAG,CAACsB,MAAJ,CAAWF,CAAX,CAAJ;AACA,cAAIC,CAAC,KAAK,GAAV,EAAe;AAChB;;AACD,YAAI,CAACA,CAAD,IAAM,CAACvB,mBAAmB,CAACyB,IAApB,CAAyBF,CAAzB,CAAX,EAAwC;AACtCjB,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF;AACF;;AAED,MAAIQ,UAAU,KAAKI,SAAnB,EAA8B;AAC5BJ,IAAAA,UAAU,GAAGZ,GAAG,CAACiB,KAAJ,CAAU,CAAV,EAAaN,CAAb,EAAgBO,IAAhB,EAAb;AACD,GAFD,MAEO,IAAIV,eAAe,KAAK,CAAxB,EAA2B;AAChCW,IAAAA,UAAU;AACX;;AAED,WAASA,UAAT,GAAsB;AACpB,KAACN,OAAO,KAAKA,OAAO,GAAG,EAAf,CAAR,EAA4BW,IAA5B,CAAiCxB,GAAG,CAACiB,KAAJ,CAAUT,eAAV,EAA2BG,CAA3B,EAA8BO,IAA9B,EAAjC;AACAV,IAAAA,eAAe,GAAGG,CAAC,GAAG,CAAtB;AACD;;AAED,MAAIE,OAAJ,EAAa;AACX,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGE,OAAO,CAACC,MAAxB,EAAgCH,CAAC,EAAjC,EAAqC;AACnCC,MAAAA,UAAU,GAAGa,UAAU,CAACb,UAAD,EAAaC,OAAO,CAACF,CAAD,CAApB,CAAvB;AACD;AACF;;AAED,SAAOC,UAAP;AACD;;AAED,SAASa,UAAT,CAAoBzB,GAApB,EAAyB0B,MAAzB,EAAiC;AAC/B,MAAMf,CAAC,GAAGe,MAAM,CAACC,OAAP,CAAe,GAAf,CAAV;;AACA,MAAIhB,CAAC,GAAG,CAAR,EAAW;AACT;AACA,0BAAce,MAAd,iBAA0B1B,GAA1B;AACD,GAHD,MAGO;AACL,QAAM4B,IAAI,GAAGF,MAAM,CAACT,KAAP,CAAa,CAAb,EAAgBN,CAAhB,CAAb;AACA,QAAMkB,IAAI,GAAGH,MAAM,CAACT,KAAP,CAAaN,CAAC,GAAG,CAAjB,CAAb;AACA,0BAAciB,IAAd,iBAAwB5B,GAAxB,SAA8B6B,IAAI,KAAK,GAAT,GAAe,MAAMA,IAArB,GAA4BA,IAA1D;AACD;AACF","sourcesContent":["/*       */\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/\n\nexport function parseFilters(exp) {\n  let inSingle = false\n  let inDouble = false\n  let inTemplateString = false\n  let inRegex = false\n  let curly = 0\n  let square = 0\n  let paren = 0\n  let lastFilterIndex = 0\n  let c, prev, i, expression, filters\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c\n    c = exp.charCodeAt(i)\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) inSingle = false\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) inDouble = false\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) inTemplateString = false\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) inRegex = false\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1\n        expression = exp.slice(0, i).trim()\n      } else {\n        pushFilter()\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break         // \"\n        case 0x27:\n          inSingle = true;\n          break         // '\n        case 0x60:\n          inTemplateString = true;\n          break // `\n        case 0x28:\n          paren++;\n          break                 // (\n        case 0x29:\n          paren--;\n          break                 // )\n        case 0x5B:\n          square++;\n          break                // [\n        case 0x5D:\n          square--;\n          break                // ]\n        case 0x7B:\n          curly++;\n          break                 // {\n        case 0x7D:\n          curly--;\n          break                 // }\n      }\n      if (c === 0x2f) { // /\n        let j = i - 1\n        let p\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j)\n          if (p !== ' ') break\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim()\n  } else if (lastFilterIndex !== 0) {\n    pushFilter()\n  }\n\n  function pushFilter() {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim())\n    lastFilterIndex = i + 1\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i])\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter(exp, filter) {\n  const i = filter.indexOf('(')\n  if (i < 0) {\n    // _f: resolveFilter\n    return `_f(\"${filter}\")(${exp})`\n  } else {\n    const name = filter.slice(0, i)\n    const args = filter.slice(i + 1)\n    return `_f(\"${name}\")(${exp}${args !== ')' ? ',' + args : args}`\n  }\n}\n"]}]}