{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/vdom/patch.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/vdom/patch.js","mtime":1597386046256},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/vdom/patch.js"],"names":["VNode","cloneVNode","config","SSR_ATTR","registerRef","traverse","activeInstance","isTextInputType","warn","isDef","isUndef","isTrue","makeMap","isRegExp","isPrimitive","emptyNode","hooks","sameVnode","a","b","key","tag","isComment","data","sameInputType","isAsyncPlaceholder","asyncFactory","error","i","typeA","attrs","type","typeB","createKeyToOldIdx","children","beginIdx","endIdx","map","createPatchFunction","backend","j","cbs","modules","nodeOps","length","push","emptyNodeAt","elm","tagName","toLowerCase","undefined","createRmCb","childElm","listeners","remove","removeNode","el","parent","parentNode","removeChild","isUnknownElement","vnode","inVPre","ns","ignoredElements","some","ignore","test","creatingElmInVPre","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","index","isRootInsert","createComponent","process","env","NODE_ENV","pre","context","createElementNS","createElement","setScope","window","__WEEX__","appendAsTree","invokeCreateHooks","insert","createChildren","createComment","text","createTextNode","isReactivated","componentInstance","keepAlive","hook","init","initComponent","reactivateComponent","pendingInsert","apply","$el","isPatchable","innerNode","_vnode","transition","activate","ref","insertBefore","appendChild","Array","isArray","checkDuplicateKeys","String","create","fnScopeId","setStyleScope","ancestor","$options","_scopeId","fnContext","addVnodes","vnodes","startIdx","invokeDestroyHook","destroy","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","oldKeyToIdx","idxInOld","vnodeToMove","canMove","patchVnode","nextSibling","findIdxInOld","seenKeys","node","start","end","c","oldVnode","resolved","hydrate","isStatic","isCloned","isOnce","prepatch","update","setTextContent","postpatch","invokeInsertHook","queue","initial","hydrationBailed","isRenderedModule","assertNodeMatch","hasChildNodes","domProps","innerHTML","console","childrenMatch","childNode","firstChild","childNodes","fullInvoke","indexOf","nodeType","patch","hydrating","isInitialPatch","isRealElement","hasAttribute","removeAttribute","oldElm","_leaveCb","patchable","merged","fns"],"mappings":"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","sourcesContent":["/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nimport VNode, {cloneVNode} from './vnode'\nimport config from '../config'\nimport {SSR_ATTR} from '../../shared/constants'\nimport {registerRef} from './modules/ref'\nimport {traverse} from '../observer/traverse'\nimport {activeInstance} from '../instance/lifecycle'\nimport {isTextInputType} from '../../platforms/web/util/element'\n\nimport {\n  warn,\n  isDef,\n  isUndef,\n  isTrue,\n  makeMap,\n  isRegExp,\n  isPrimitive\n} from '../util/index'\n\nexport const emptyNode = new VNode('', {}, [])\n\nconst hooks = ['create', 'activate', 'update', 'remove', 'destroy']\n\nfunction sameVnode(a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType(a, b) {\n  if (a.tag !== 'input') return true\n  let i\n  const typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type\n  const typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  let i, key\n  const map = {}\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key\n    if (isDef(key)) map[key] = i\n  }\n  return map\n}\n\nexport function createPatchFunction(backend) {\n  let i, j\n  const cbs = {}\n\n  const {modules, nodeOps} = backend\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = []\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]])\n      }\n    }\n  }\n\n  function emptyNodeAt(elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb(childElm, listeners) {\n    function remove() {\n      if (--remove.listeners === 0) {\n        removeNode(childElm)\n      }\n    }\n\n    remove.listeners = listeners\n    return remove\n  }\n\n  function removeNode(el) {\n    const parent = nodeOps.parentNode(el)\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el)\n    }\n  }\n\n  function isUnknownElement(vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(ignore => {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  let creatingElmInVPre = 0\n\n  function createElm(\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode)\n    }\n\n    vnode.isRootInsert = !nested // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    const data = vnode.data\n    const children = vnode.children\n    const tag = vnode.tag\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++\n        }\n        if (isUnknownElement(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          )\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode)\n      setScope(vnode)\n\n      /* istanbul ignore if */\n      if (window.__WEEX__) {\n        // in Weex, the default insertion order is parent-first.\n        // List items can be optimized to use children-first insertion\n        // with append=\"tree\".\n        const appendAsTree = isDef(data) && isTrue(data.appendAsTree)\n        if (!appendAsTree) {\n          if (isDef(data)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n          }\n          insert(parentElm, vnode.elm, refElm)\n        }\n        createChildren(vnode, children, insertedVnodeQueue)\n        if (appendAsTree) {\n          if (isDef(data)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n          }\n          insert(parentElm, vnode.elm, refElm)\n        }\n      } else {\n        createChildren(vnode, children, insertedVnodeQueue)\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue)\n        }\n        insert(parentElm, vnode.elm, refElm)\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text)\n      insert(parentElm, vnode.elm, refElm)\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text)\n      insert(parentElm, vnode.elm, refElm)\n    }\n  }\n\n  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    let i = vnode.data\n    if (isDef(i)) {\n      const isReactivated = isDef(vnode.componentInstance) && i.keepAlive\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */)\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue)\n        insert(parentElm, vnode.elm, refElm)\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm)\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent(vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert)\n      vnode.data.pendingInsert = null\n    }\n    vnode.elm = vnode.componentInstance.$el\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue)\n      setScope(vnode)\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode)\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode)\n    }\n  }\n\n  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    let i\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    let innerNode = vnode\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode)\n        }\n        insertedVnodeQueue.push(innerNode)\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm)\n  }\n\n  function insert(parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (nodeOps.parentNode(ref) === parent) {\n          nodeOps.insertBefore(parent, elm, ref)\n        }\n      } else {\n        nodeOps.appendChild(parent, elm)\n      }\n    }\n  }\n\n  function createChildren(vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children)\n      }\n      for (let i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i)\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)))\n    }\n  }\n\n  function isPatchable(vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks(vnode, insertedVnodeQueue) {\n    for (let i = 0; i < cbs.create.length; ++i) {\n      cbs.create[i](emptyNode, vnode)\n    }\n    i = vnode.data.hook // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) i.create(emptyNode, vnode)\n      if (isDef(i.insert)) insertedVnodeQueue.push(vnode)\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope(vnode) {\n    let i\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i)\n    } else {\n      let ancestor = vnode\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i)\n        }\n        ancestor = ancestor.parent\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i)\n    }\n  }\n\n  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx)\n    }\n  }\n\n  function invokeDestroyHook(vnode) {\n    let i, j\n    const data = vnode.data\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) i(vnode)\n      for (i = 0; i < cbs.destroy.length; ++i) cbs.destroy[i](vnode)\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j])\n      }\n    }\n  }\n\n  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      const ch = vnodes[startIdx]\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch)\n          invokeDestroyHook(ch)\n        } else { // Text node\n          removeNode(ch.elm)\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook(vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      let i\n      const listeners = cbs.remove.length + 1\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners)\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm)\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm)\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm)\n      } else {\n        rm()\n      }\n    } else {\n      removeNode(vnode.elm)\n    }\n  }\n\n  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    let oldStartIdx = 0\n    let newStartIdx = 0\n    let oldEndIdx = oldCh.length - 1\n    let oldStartVnode = oldCh[0]\n    let oldEndVnode = oldCh[oldEndIdx]\n    let newEndIdx = newCh.length - 1\n    let newStartVnode = newCh[0]\n    let newEndVnode = newCh[newEndIdx]\n    let oldKeyToIdx, idxInOld, vnodeToMove, refElm\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    const canMove = !removeOnly\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh)\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx] // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx]\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        oldStartVnode = oldCh[++oldStartIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm))\n        oldStartVnode = oldCh[++oldStartIdx]\n        newEndVnode = newCh[--newEndIdx]\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm)\n        oldEndVnode = oldCh[--oldEndIdx]\n        newStartVnode = newCh[++newStartIdx]\n      } else {\n        if (isUndef(oldKeyToIdx)) oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx)\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx)\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n        } else {\n          vnodeToMove = oldCh[idxInOld]\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx)\n            oldCh[idxInOld] = undefined\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm)\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx)\n          }\n        }\n        newStartVnode = newCh[++newStartIdx]\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue)\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx)\n    }\n  }\n\n  function checkDuplicateKeys(children) {\n    const seenKeys = {}\n    for (let i = 0; i < children.length; i++) {\n      const vnode = children[i]\n      const key = vnode.key\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            `Duplicate keys detected: '${key}'. This may cause an update error.`,\n            vnode.context\n          )\n        } else {\n          seenKeys[key] = true\n        }\n      }\n    }\n  }\n\n  function findIdxInOld(node, oldCh, start, end) {\n    for (let i = start; i < end; i++) {\n      const c = oldCh[i]\n      if (isDef(c) && sameVnode(node, c)) return i\n    }\n  }\n\n  function patchVnode(\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode)\n    }\n\n    const elm = vnode.elm = oldVnode.elm\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue)\n      } else {\n        vnode.isAsyncPlaceholder = true\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance\n      return\n    }\n\n    let i\n    const data = vnode.data\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode)\n    }\n\n    const oldCh = oldVnode.children\n    const ch = vnode.children\n\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) cbs.update[i](oldVnode, vnode)\n      if (isDef(i = data.hook) && isDef(i = i.update)) i(oldVnode, vnode)\n    }\n\n\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly)\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch)\n        }\n        if (isDef(oldVnode.text)) nodeOps.setTextContent(elm, '')\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue)\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1)\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '')\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text)\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) i(oldVnode, vnode)\n    }\n  }\n\n  function invokeInsertHook(vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue\n    } else {\n      for (let i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i])\n      }\n    }\n  }\n\n  let hydrationBailed = false\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  const isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key')\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {\n    let i\n    const {tag, data, children} = vnode\n    inVPre = inVPre || (data && data.pre)\n    vnode.elm = elm\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) i(vnode, true /* hydrating */)\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue)\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue)\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true\n                console.warn('Parent: ', elm)\n                console.warn('server innerHTML: ', i)\n                console.warn('client innerHTML: ', elm.innerHTML)\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            let childrenMatch = true\n            let childNode = elm.firstChild\n            for (let i = 0; i < children.length; i++) {\n              if (!childNode || !hydrate(childNode, children[i], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false\n                break\n              }\n              childNode = childNode.nextSibling\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true\n                console.warn('Parent: ', elm)\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children)\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        let fullInvoke = false\n        for (const key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true\n            invokeCreateHooks(vnode, insertedVnodeQueue)\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class'])\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text\n    }\n    return true\n  }\n\n  function assertNodeMatch(node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch(oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) invokeDestroyHook(oldVnode)\n      return\n    }\n\n    let isInitialPatch = false\n    const insertedVnodeQueue = []\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true\n      createElm(vnode, insertedVnodeQueue)\n    } else {\n      const isRealElement = isDef(oldVnode.nodeType)\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly)\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR)\n            hydrating = true\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true)\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              )\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode)\n        }\n\n        // replacing existing element\n        const oldElm = oldVnode.elm\n        const parentElm = nodeOps.parentNode(oldElm)\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        )\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          let ancestor = vnode.parent\n          const patchable = isPatchable(vnode)\n          while (ancestor) {\n            for (let i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor)\n            }\n            ancestor.elm = vnode.elm\n            if (patchable) {\n              for (let i = 0; i < cbs.create.length; ++i) {\n                cbs.create[i](emptyNode, ancestor)\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              const insert = ancestor.data.hook.insert\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (let i = 1; i < insert.fns.length; i++) {\n                  insert.fns[i]()\n                }\n              }\n            } else {\n              registerRef(ancestor)\n            }\n            ancestor = ancestor.parent\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0)\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode)\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch)\n    return vnode.elm\n  }\n}\n"]}]}