{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/html-parser.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/html-parser.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/html-parser.js"],"names":["makeMap","no","isNonPhrasingTag","unicodeLetters","attribute","ncname","qnameCapture","startTagOpen","RegExp","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","tag","html","decodeAttr","value","shouldDecodeNewlines","re","replace","match","parseHTML","options","stack","expectHTML","isUnaryTag","canBeLeftOpenTag","index","last","lastTag","textEnd","indexOf","test","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","length","endTagMatch","curIndex","parseEndTag","startTagMatch","parseStartTag","handleStartTag","tagName","text","rest","next","slice","chars","endTagLength","stackedTag","toLowerCase","reStackedTag","all","process","env","NODE_ENV","warn","start","n","attrs","end","attr","push","unarySlash","unary","l","Array","i","args","shouldDecodeNewlinesForHref","name","outputSourceRange","lowerCasedTag","pos","lowerCasedTagName"],"mappings":"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","sourcesContent":["/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\nimport {makeMap, no} from '../../shared/util'\nimport {isNonPhrasingTag} from '../../platforms/web/compiler/util'\nimport {unicodeLetters} from '../../core/util/lang'\n\n// Regular Expressions for parsing tags and attributes\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z${unicodeLetters}]*`\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)\nconst startTagClose = /^\\s*(\\/?)>/\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\nconst doctype = /^<!DOCTYPE [^>]+>/i\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nconst comment = /^<!\\--/\nconst conditionalComment = /^<!\\[/\n\n// Special Elements (can contain anything)\nexport const isPlainTextElement = makeMap('script,style,textarea', true)\nconst reCache = {}\n\nconst decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n}\nconst encodedAttr = /&(?:lt|gt|quot|amp);/g\nconst encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g\n\n// #5992\nconst isIgnoreNewlineTag = makeMap('pre,textarea', true)\nconst shouldIgnoreFirstNewline = (tag, html) => tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'\n\nfunction decodeAttr(value, shouldDecodeNewlines) {\n  const re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr\n  return value.replace(re, match => decodingMap[match])\n}\n\nexport function parseHTML(html, options) {\n  const stack = []\n  const expectHTML = options.expectHTML\n  const isUnaryTag = options.isUnaryTag || no\n  const canBeLeftOpenTag = options.canBeLeftOpenTag || no\n  let index = 0\n  let last, lastTag\n  while (html) {\n    last = html\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      let textEnd = html.indexOf('<')\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          const commentEnd = html.indexOf('-->')\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3)\n            }\n            advance(commentEnd + 3)\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          const conditionalEnd = html.indexOf(']>')\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2)\n            continue\n          }\n        }\n\n        // Doctype:\n        const doctypeMatch = html.match(doctype)\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length)\n          continue\n        }\n\n        // End tag:\n        const endTagMatch = html.match(endTag)\n        if (endTagMatch) {\n          const curIndex = index\n          advance(endTagMatch[0].length)\n          parseEndTag(endTagMatch[1], curIndex, index)\n          continue\n        }\n\n        // Start tag:\n        const startTagMatch = parseStartTag()\n        if (startTagMatch) {\n          handleStartTag(startTagMatch)\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1)\n          }\n          continue\n        }\n      }\n\n      let text, rest, next\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd)\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n          ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1)\n          if (next < 0) break\n          textEnd += next\n          rest = html.slice(textEnd)\n        }\n        text = html.substring(0, textEnd)\n      }\n\n      if (textEnd < 0) {\n        text = html\n      }\n\n      if (text) {\n        advance(text.length)\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index)\n      }\n    } else {\n      let endTagLength = 0\n      const stackedTag = lastTag.toLowerCase()\n      const reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'))\n      const rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1')\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1)\n        }\n        if (options.chars) {\n          options.chars(text)\n        }\n        return ''\n      })\n      index += html.length - rest.length\n      html = rest\n      parseEndTag(stackedTag, index - endTagLength, index)\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html)\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn(`Mal-formatted tag at end of template: \"${html}\"`, {start: index + html.length})\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag()\n\n  function advance(n) {\n    index += n\n    html = html.substring(n)\n  }\n\n  function parseStartTag() {\n    const start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      }\n      advance(start[0].length)\n      let end, attr\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        attr.start = index\n        advance(attr[0].length)\n        attr.end = index\n        match.attrs.push(attr)\n      }\n      if (end) {\n        match.unarySlash = end[1]\n        advance(end[0].length)\n        match.end = index\n        return match\n      }\n    }\n  }\n\n  function handleStartTag(match) {\n    const tagName = match.tagName\n    const unarySlash = match.unarySlash\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag)\n      }\n      if (canBeLeftOpenTag(tagName) && lastTag === tagName) {\n        parseEndTag(tagName)\n      }\n    }\n\n    const unary = isUnaryTag(tagName) || !!unarySlash\n\n    const l = match.attrs.length\n    const attrs = new Array(l)\n    for (let i = 0; i < l; i++) {\n      const args = match.attrs[i]\n      const value = args[3] || args[4] || args[5] || ''\n      const shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      }\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length\n        attrs[i].end = args.end\n      }\n    }\n\n    if (!unary) {\n      stack.push({tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end})\n      lastTag = tagName\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end)\n    }\n  }\n\n  function parseEndTag(tagName, start, end) {\n    let pos, lowerCasedTagName\n    if (start == null) start = index\n    if (end == null) end = index\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase()\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (let i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            `tag <${stack[i].tag}> has no matching end tag.`,\n            {start: stack[i].start}\n          )\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end)\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos\n      lastTag = pos && stack[pos - 1].tag\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end)\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end)\n      }\n      if (options.end) {\n        options.end(tagName, start, end)\n      }\n    }\n  }\n}\n"]}]}