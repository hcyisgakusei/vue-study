{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/util/options.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/util/options.js","mtime":1596450111000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWZsZWN0Lm93bi1rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CgovKiAgICAgICAqLwppbXBvcnQgY29uZmlnIGZyb20gJy4uL2NvbmZpZyc7CmltcG9ydCB7IHdhcm4gfSBmcm9tICcuL2RlYnVnJzsKaW1wb3J0IHsgc2V0IH0gZnJvbSAnLi4vb2JzZXJ2ZXIvaW5kZXgnOwppbXBvcnQgeyB1bmljb2RlTGV0dGVycyB9IGZyb20gJy4vbGFuZyc7CmltcG9ydCB7IG5hdGl2ZVdhdGNoLCBoYXNTeW1ib2wgfSBmcm9tICcuL2Vudic7CmltcG9ydCB7IEFTU0VUX1RZUEVTLCBMSUZFQ1lDTEVfSE9PS1MgfSBmcm9tICcuLi8uLi9zaGFyZWQvY29uc3RhbnRzJzsKaW1wb3J0IHsgZXh0ZW5kLCBoYXNPd24sIGNhbWVsaXplLCB0b1Jhd1R5cGUsIGNhcGl0YWxpemUsIGlzQnVpbHRJblRhZywgaXNQbGFpbk9iamVjdCB9IGZyb20gJy4uLy4uL3NoYXJlZC91dGlsJzsKLyoqCiAqIE9wdGlvbiBvdmVyd3JpdGluZyBzdHJhdGVnaWVzIGFyZSBmdW5jdGlvbnMgdGhhdCBoYW5kbGUKICogaG93IHRvIG1lcmdlIGEgcGFyZW50IG9wdGlvbiB2YWx1ZSBhbmQgYSBjaGlsZCBvcHRpb24KICogdmFsdWUgaW50byB0aGUgZmluYWwgdmFsdWUuCiAqLwoKdmFyIHN0cmF0cyA9IGNvbmZpZy5vcHRpb25NZXJnZVN0cmF0ZWdpZXM7Ci8qKgogKiBPcHRpb25zIHdpdGggcmVzdHJpY3Rpb25zCiAqLwoKaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHsKICBzdHJhdHMuZWwgPSBzdHJhdHMucHJvcHNEYXRhID0gZnVuY3Rpb24gKHBhcmVudCwgY2hpbGQsIHZtLCBrZXkpIHsKICAgIGlmICghdm0pIHsKICAgICAgd2Fybigib3B0aW9uIFwiIi5jb25jYXQoa2V5LCAiXCIgY2FuIG9ubHkgYmUgdXNlZCBkdXJpbmcgaW5zdGFuY2UgIikgKyAnY3JlYXRpb24gd2l0aCB0aGUgYG5ld2Aga2V5d29yZC4nKTsKICAgIH0KCiAgICByZXR1cm4gZGVmYXVsdFN0cmF0KHBhcmVudCwgY2hpbGQpOwogIH07Cn0KLyoqCiAqIEhlbHBlciB0aGF0IHJlY3Vyc2l2ZWx5IG1lcmdlcyB0d28gZGF0YSBvYmplY3RzIHRvZ2V0aGVyLgogKi8KCgpmdW5jdGlvbiBtZXJnZURhdGEodG8sIGZyb20pIHsKICBpZiAoIWZyb20pIHJldHVybiB0bzsKICB2YXIga2V5LCB0b1ZhbCwgZnJvbVZhbDsKICB2YXIga2V5cyA9IGhhc1N5bWJvbCA/IFJlZmxlY3Qub3duS2V5cyhmcm9tKSA6IE9iamVjdC5rZXlzKGZyb20pOwoKICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHsKICAgIGtleSA9IGtleXNbaV07IC8vIGluIGNhc2UgdGhlIG9iamVjdCBpcyBhbHJlYWR5IG9ic2VydmVkLi4uCgogICAgaWYgKGtleSA9PT0gJ19fb2JfXycpIGNvbnRpbnVlOwogICAgdG9WYWwgPSB0b1trZXldOwogICAgZnJvbVZhbCA9IGZyb21ba2V5XTsKCiAgICBpZiAoIWhhc093bih0bywga2V5KSkgewogICAgICBzZXQodG8sIGtleSwgZnJvbVZhbCk7CiAgICB9IGVsc2UgaWYgKHRvVmFsICE9PSBmcm9tVmFsICYmIGlzUGxhaW5PYmplY3QodG9WYWwpICYmIGlzUGxhaW5PYmplY3QoZnJvbVZhbCkpIHsKICAgICAgbWVyZ2VEYXRhKHRvVmFsLCBmcm9tVmFsKTsKICAgIH0KICB9CgogIHJldHVybiB0bzsKfQovKioKICogRGF0YQogKi8KCgpleHBvcnQgZnVuY3Rpb24gbWVyZ2VEYXRhT3JGbihwYXJlbnRWYWwsIGNoaWxkVmFsLCB2bSkgewogIGlmICghdm0pIHsKICAgIC8vIGluIGEgVnVlLmV4dGVuZCBtZXJnZSwgYm90aCBzaG91bGQgYmUgZnVuY3Rpb25zCiAgICBpZiAoIWNoaWxkVmFsKSB7CiAgICAgIHJldHVybiBwYXJlbnRWYWw7CiAgICB9CgogICAgaWYgKCFwYXJlbnRWYWwpIHsKICAgICAgcmV0dXJuIGNoaWxkVmFsOwogICAgfSAvLyB3aGVuIHBhcmVudFZhbCAmIGNoaWxkVmFsIGFyZSBib3RoIHByZXNlbnQsCiAgICAvLyB3ZSBuZWVkIHRvIHJldHVybiBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUKICAgIC8vIG1lcmdlZCByZXN1bHQgb2YgYm90aCBmdW5jdGlvbnMuLi4gbm8gbmVlZCB0bwogICAgLy8gY2hlY2sgaWYgcGFyZW50VmFsIGlzIGEgZnVuY3Rpb24gaGVyZSBiZWNhdXNlCiAgICAvLyBpdCBoYXMgdG8gYmUgYSBmdW5jdGlvbiB0byBwYXNzIHByZXZpb3VzIG1lcmdlcy4KCgogICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlZERhdGFGbigpIHsKICAgICAgcmV0dXJuIG1lcmdlRGF0YSh0eXBlb2YgY2hpbGRWYWwgPT09ICdmdW5jdGlvbicgPyBjaGlsZFZhbC5jYWxsKHRoaXMsIHRoaXMpIDogY2hpbGRWYWwsIHR5cGVvZiBwYXJlbnRWYWwgPT09ICdmdW5jdGlvbicgPyBwYXJlbnRWYWwuY2FsbCh0aGlzLCB0aGlzKSA6IHBhcmVudFZhbCk7CiAgICB9OwogIH0gZWxzZSB7CiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VkSW5zdGFuY2VEYXRhRm4oKSB7CiAgICAgIC8vIGluc3RhbmNlIG1lcmdlCiAgICAgIHZhciBpbnN0YW5jZURhdGEgPSB0eXBlb2YgY2hpbGRWYWwgPT09ICdmdW5jdGlvbicgPyBjaGlsZFZhbC5jYWxsKHZtLCB2bSkgOiBjaGlsZFZhbDsKICAgICAgdmFyIGRlZmF1bHREYXRhID0gdHlwZW9mIHBhcmVudFZhbCA9PT0gJ2Z1bmN0aW9uJyA/IHBhcmVudFZhbC5jYWxsKHZtLCB2bSkgOiBwYXJlbnRWYWw7CgogICAgICBpZiAoaW5zdGFuY2VEYXRhKSB7CiAgICAgICAgcmV0dXJuIG1lcmdlRGF0YShpbnN0YW5jZURhdGEsIGRlZmF1bHREYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZGVmYXVsdERhdGE7CiAgICAgIH0KICAgIH07CiAgfQp9CgpzdHJhdHMuZGF0YSA9IGZ1bmN0aW9uIChwYXJlbnRWYWwsIGNoaWxkVmFsLCB2bSkgewogIGlmICghdm0pIHsKICAgIGlmIChjaGlsZFZhbCAmJiB0eXBlb2YgY2hpbGRWYWwgIT09ICdmdW5jdGlvbicpIHsKICAgICAgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuKCdUaGUgImRhdGEiIG9wdGlvbiBzaG91bGQgYmUgYSBmdW5jdGlvbiAnICsgJ3RoYXQgcmV0dXJucyBhIHBlci1pbnN0YW5jZSB2YWx1ZSBpbiBjb21wb25lbnQgJyArICdkZWZpbml0aW9ucy4nLCB2bSk7CiAgICAgIHJldHVybiBwYXJlbnRWYWw7CiAgICB9CgogICAgcmV0dXJuIG1lcmdlRGF0YU9yRm4ocGFyZW50VmFsLCBjaGlsZFZhbCk7CiAgfQoKICByZXR1cm4gbWVyZ2VEYXRhT3JGbihwYXJlbnRWYWwsIGNoaWxkVmFsLCB2bSk7Cn07Ci8qKgogKiBIb29rcyBhbmQgcHJvcHMgYXJlIG1lcmdlZCBhcyBhcnJheXMuCiAqLwoKCmZ1bmN0aW9uIG1lcmdlSG9vayhwYXJlbnRWYWwsIGNoaWxkVmFsKSB7CiAgdmFyIHJlcyA9IGNoaWxkVmFsID8gcGFyZW50VmFsID8gcGFyZW50VmFsLmNvbmNhdChjaGlsZFZhbCkgOiBBcnJheS5pc0FycmF5KGNoaWxkVmFsKSA/IGNoaWxkVmFsIDogW2NoaWxkVmFsXSA6IHBhcmVudFZhbDsKICByZXR1cm4gcmVzID8gZGVkdXBlSG9va3MocmVzKSA6IHJlczsKfQoKZnVuY3Rpb24gZGVkdXBlSG9va3MoaG9va3MpIHsKICB2YXIgcmVzID0gW107CgogIGZvciAodmFyIGkgPSAwOyBpIDwgaG9va3MubGVuZ3RoOyBpKyspIHsKICAgIGlmIChyZXMuaW5kZXhPZihob29rc1tpXSkgPT09IC0xKSB7CiAgICAgIHJlcy5wdXNoKGhvb2tzW2ldKTsKICAgIH0KICB9CgogIHJldHVybiByZXM7Cn0KCkxJRkVDWUNMRV9IT09LUy5mb3JFYWNoKGZ1bmN0aW9uIChob29rKSB7CiAgc3RyYXRzW2hvb2tdID0gbWVyZ2VIb29rOwp9KTsKLyoqCiAqIEFzc2V0cwogKgogKiBXaGVuIGEgdm0gaXMgcHJlc2VudCAoaW5zdGFuY2UgY3JlYXRpb24pLCB3ZSBuZWVkIHRvIGRvCiAqIGEgdGhyZWUtd2F5IG1lcmdlIGJldHdlZW4gY29uc3RydWN0b3Igb3B0aW9ucywgaW5zdGFuY2UKICogb3B0aW9ucyBhbmQgcGFyZW50IG9wdGlvbnMuCiAqLwoKZnVuY3Rpb24gbWVyZ2VBc3NldHMocGFyZW50VmFsLCBjaGlsZFZhbCwgdm0sIGtleSkgewogIHZhciByZXMgPSBPYmplY3QuY3JlYXRlKHBhcmVudFZhbCB8fCBudWxsKTsKCiAgaWYgKGNoaWxkVmFsKSB7CiAgICBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIGFzc2VydE9iamVjdFR5cGUoa2V5LCBjaGlsZFZhbCwgdm0pOwogICAgcmV0dXJuIGV4dGVuZChyZXMsIGNoaWxkVmFsKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHJlczsKICB9Cn0KCkFTU0VUX1RZUEVTLmZvckVhY2goZnVuY3Rpb24gKHR5cGUpIHsKICBzdHJhdHNbdHlwZSArICdzJ10gPSBtZXJnZUFzc2V0czsKfSk7Ci8qKgogKiBXYXRjaGVycy4KICoKICogV2F0Y2hlcnMgaGFzaGVzIHNob3VsZCBub3Qgb3ZlcndyaXRlIG9uZQogKiBhbm90aGVyLCBzbyB3ZSBtZXJnZSB0aGVtIGFzIGFycmF5cy4KICovCgpzdHJhdHMud2F0Y2ggPSBmdW5jdGlvbiAocGFyZW50VmFsLCBjaGlsZFZhbCwgdm0sIGtleSkgewogIC8vIHdvcmsgYXJvdW5kIEZpcmVmb3gncyBPYmplY3QucHJvdG90eXBlLndhdGNoLi4uCiAgaWYgKHBhcmVudFZhbCA9PT0gbmF0aXZlV2F0Y2gpIHBhcmVudFZhbCA9IHVuZGVmaW5lZDsKICBpZiAoY2hpbGRWYWwgPT09IG5hdGl2ZVdhdGNoKSBjaGlsZFZhbCA9IHVuZGVmaW5lZDsKICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi8KCiAgaWYgKCFjaGlsZFZhbCkgcmV0dXJuIE9iamVjdC5jcmVhdGUocGFyZW50VmFsIHx8IG51bGwpOwoKICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgewogICAgYXNzZXJ0T2JqZWN0VHlwZShrZXksIGNoaWxkVmFsLCB2bSk7CiAgfQoKICBpZiAoIXBhcmVudFZhbCkgcmV0dXJuIGNoaWxkVmFsOwogIHZhciByZXQgPSB7fTsKICBleHRlbmQocmV0LCBwYXJlbnRWYWwpOwoKICBmb3IgKHZhciBfa2V5IGluIGNoaWxkVmFsKSB7CiAgICB2YXIgcGFyZW50ID0gcmV0W19rZXldOwogICAgdmFyIGNoaWxkID0gY2hpbGRWYWxbX2tleV07CgogICAgaWYgKHBhcmVudCAmJiAhQXJyYXkuaXNBcnJheShwYXJlbnQpKSB7CiAgICAgIHBhcmVudCA9IFtwYXJlbnRdOwogICAgfQoKICAgIHJldFtfa2V5XSA9IHBhcmVudCA/IHBhcmVudC5jb25jYXQoY2hpbGQpIDogQXJyYXkuaXNBcnJheShjaGlsZCkgPyBjaGlsZCA6IFtjaGlsZF07CiAgfQoKICByZXR1cm4gcmV0Owp9OwovKioKICogT3RoZXIgb2JqZWN0IGhhc2hlcy4KICovCgoKc3RyYXRzLnByb3BzID0gc3RyYXRzLm1ldGhvZHMgPSBzdHJhdHMuaW5qZWN0ID0gc3RyYXRzLmNvbXB1dGVkID0gZnVuY3Rpb24gKHBhcmVudFZhbCwgY2hpbGRWYWwsIHZtLCBrZXkpIHsKICBpZiAoY2hpbGRWYWwgJiYgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgewogICAgYXNzZXJ0T2JqZWN0VHlwZShrZXksIGNoaWxkVmFsLCB2bSk7CiAgfQoKICBpZiAoIXBhcmVudFZhbCkgcmV0dXJuIGNoaWxkVmFsOwogIHZhciByZXQgPSBPYmplY3QuY3JlYXRlKG51bGwpOwogIGV4dGVuZChyZXQsIHBhcmVudFZhbCk7CiAgaWYgKGNoaWxkVmFsKSBleHRlbmQocmV0LCBjaGlsZFZhbCk7CiAgcmV0dXJuIHJldDsKfTsKCnN0cmF0cy5wcm92aWRlID0gbWVyZ2VEYXRhT3JGbjsKLyoqCiAqIERlZmF1bHQgc3RyYXRlZ3kuCiAqLwoKdmFyIGRlZmF1bHRTdHJhdCA9IGZ1bmN0aW9uIGRlZmF1bHRTdHJhdChwYXJlbnRWYWwsIGNoaWxkVmFsKSB7CiAgcmV0dXJuIGNoaWxkVmFsID09PSB1bmRlZmluZWQgPyBwYXJlbnRWYWwgOiBjaGlsZFZhbDsKfTsKLyoqCiAqIFZhbGlkYXRlIGNvbXBvbmVudCBuYW1lcwogKi8KCgpmdW5jdGlvbiBjaGVja0NvbXBvbmVudHMob3B0aW9ucykgewogIGZvciAodmFyIGtleSBpbiBvcHRpb25zLmNvbXBvbmVudHMpIHsKICAgIHZhbGlkYXRlQ29tcG9uZW50TmFtZShrZXkpOwogIH0KfQoKZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlQ29tcG9uZW50TmFtZShuYW1lKSB7CiAgaWYgKCFuZXcgUmVnRXhwKCJeW2EtekEtWl1bXFwtXFwuMC05XyIuY29uY2F0KHVuaWNvZGVMZXR0ZXJzLCAiXSokIikpLnRlc3QobmFtZSkpIHsKICAgIHdhcm4oJ0ludmFsaWQgY29tcG9uZW50IG5hbWU6ICInICsgbmFtZSArICciLiBDb21wb25lbnQgbmFtZXMgJyArICdzaG91bGQgY29uZm9ybSB0byB2YWxpZCBjdXN0b20gZWxlbWVudCBuYW1lIGluIGh0bWw1IHNwZWNpZmljYXRpb24uJyk7CiAgfQoKICBpZiAoaXNCdWlsdEluVGFnKG5hbWUpIHx8IGNvbmZpZy5pc1Jlc2VydmVkVGFnKG5hbWUpKSB7CiAgICB3YXJuKCdEbyBub3QgdXNlIGJ1aWx0LWluIG9yIHJlc2VydmVkIEhUTUwgZWxlbWVudHMgYXMgY29tcG9uZW50ICcgKyAnaWQ6ICcgKyBuYW1lKTsKICB9Cn0KLyoqCiAqIEVuc3VyZSBhbGwgcHJvcHMgb3B0aW9uIHN5bnRheCBhcmUgbm9ybWFsaXplZCBpbnRvIHRoZQogKiBPYmplY3QtYmFzZWQgZm9ybWF0LgogKi8KCmZ1bmN0aW9uIG5vcm1hbGl6ZVByb3BzKG9wdGlvbnMsIHZtKSB7CiAgdmFyIHByb3BzID0gb3B0aW9ucy5wcm9wczsKICBpZiAoIXByb3BzKSByZXR1cm47CiAgdmFyIHJlcyA9IHt9OwogIHZhciBpLCB2YWwsIG5hbWU7CgogIGlmIChBcnJheS5pc0FycmF5KHByb3BzKSkgewogICAgaSA9IHByb3BzLmxlbmd0aDsKCiAgICB3aGlsZSAoaS0tKSB7CiAgICAgIHZhbCA9IHByb3BzW2ldOwoKICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgbmFtZSA9IGNhbWVsaXplKHZhbCk7CiAgICAgICAgcmVzW25hbWVdID0gewogICAgICAgICAgdHlwZTogbnVsbAogICAgICAgIH07CiAgICAgIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgewogICAgICAgIHdhcm4oJ3Byb3BzIG11c3QgYmUgc3RyaW5ncyB3aGVuIHVzaW5nIGFycmF5IHN5bnRheC4nKTsKICAgICAgfQogICAgfQogIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdChwcm9wcykpIHsKICAgIGZvciAodmFyIGtleSBpbiBwcm9wcykgewogICAgICB2YWwgPSBwcm9wc1trZXldOwogICAgICBuYW1lID0gY2FtZWxpemUoa2V5KTsKICAgICAgcmVzW25hbWVdID0gaXNQbGFpbk9iamVjdCh2YWwpID8gdmFsIDogewogICAgICAgIHR5cGU6IHZhbAogICAgICB9OwogICAgfQogIH0gZWxzZSBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgewogICAgd2FybigiSW52YWxpZCB2YWx1ZSBmb3Igb3B0aW9uIFwicHJvcHNcIjogZXhwZWN0ZWQgYW4gQXJyYXkgb3IgYW4gT2JqZWN0LCAiICsgImJ1dCBnb3QgIi5jb25jYXQodG9SYXdUeXBlKHByb3BzKSwgIi4iKSwgdm0pOwogIH0KCiAgb3B0aW9ucy5wcm9wcyA9IHJlczsKfQovKioKICogTm9ybWFsaXplIGFsbCBpbmplY3Rpb25zIGludG8gT2JqZWN0LWJhc2VkIGZvcm1hdAogKi8KCgpmdW5jdGlvbiBub3JtYWxpemVJbmplY3Qob3B0aW9ucywgdm0pIHsKICB2YXIgaW5qZWN0ID0gb3B0aW9ucy5pbmplY3Q7CiAgaWYgKCFpbmplY3QpIHJldHVybjsKICB2YXIgbm9ybWFsaXplZCA9IG9wdGlvbnMuaW5qZWN0ID0ge307CgogIGlmIChBcnJheS5pc0FycmF5KGluamVjdCkpIHsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW5qZWN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgIG5vcm1hbGl6ZWRbaW5qZWN0W2ldXSA9IHsKICAgICAgICBmcm9tOiBpbmplY3RbaV0KICAgICAgfTsKICAgIH0KICB9IGVsc2UgaWYgKGlzUGxhaW5PYmplY3QoaW5qZWN0KSkgewogICAgZm9yICh2YXIga2V5IGluIGluamVjdCkgewogICAgICB2YXIgdmFsID0gaW5qZWN0W2tleV07CiAgICAgIG5vcm1hbGl6ZWRba2V5XSA9IGlzUGxhaW5PYmplY3QodmFsKSA/IGV4dGVuZCh7CiAgICAgICAgZnJvbToga2V5CiAgICAgIH0sIHZhbCkgOiB7CiAgICAgICAgZnJvbTogdmFsCiAgICAgIH07CiAgICB9CiAgfSBlbHNlIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7CiAgICB3YXJuKCJJbnZhbGlkIHZhbHVlIGZvciBvcHRpb24gXCJpbmplY3RcIjogZXhwZWN0ZWQgYW4gQXJyYXkgb3IgYW4gT2JqZWN0LCAiICsgImJ1dCBnb3QgIi5jb25jYXQodG9SYXdUeXBlKGluamVjdCksICIuIiksIHZtKTsKICB9Cn0KLyoqCiAqIE5vcm1hbGl6ZSByYXcgZnVuY3Rpb24gZGlyZWN0aXZlcyBpbnRvIG9iamVjdCBmb3JtYXQuCiAqLwoKCmZ1bmN0aW9uIG5vcm1hbGl6ZURpcmVjdGl2ZXMob3B0aW9ucykgewogIHZhciBkaXJzID0gb3B0aW9ucy5kaXJlY3RpdmVzOwoKICBpZiAoZGlycykgewogICAgZm9yICh2YXIga2V5IGluIGRpcnMpIHsKICAgICAgdmFyIGRlZiA9IGRpcnNba2V5XTsKCiAgICAgIGlmICh0eXBlb2YgZGVmID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgZGlyc1trZXldID0gewogICAgICAgICAgYmluZDogZGVmLAogICAgICAgICAgdXBkYXRlOiBkZWYKICAgICAgICB9OwogICAgICB9CiAgICB9CiAgfQp9CgpmdW5jdGlvbiBhc3NlcnRPYmplY3RUeXBlKG5hbWUsIHZhbHVlLCB2bSkgewogIGlmICghaXNQbGFpbk9iamVjdCh2YWx1ZSkpIHsKICAgIHdhcm4oIkludmFsaWQgdmFsdWUgZm9yIG9wdGlvbiBcIiIuY29uY2F0KG5hbWUsICJcIjogZXhwZWN0ZWQgYW4gT2JqZWN0LCAiKSArICJidXQgZ290ICIuY29uY2F0KHRvUmF3VHlwZSh2YWx1ZSksICIuIiksIHZtKTsKICB9Cn0KLyoqCiAqIE1lcmdlIHR3byBvcHRpb24gb2JqZWN0cyBpbnRvIGEgbmV3IG9uZS4KICogQ29yZSB1dGlsaXR5IHVzZWQgaW4gYm90aCBpbnN0YW50aWF0aW9uIGFuZCBpbmhlcml0YW5jZS4KICovCgoKZXhwb3J0IGZ1bmN0aW9uIG1lcmdlT3B0aW9ucyhwYXJlbnQsIGNoaWxkLCB2bSkgewogIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7CiAgICBjaGVja0NvbXBvbmVudHMoY2hpbGQpOwogIH0KCiAgaWYgKHR5cGVvZiBjaGlsZCA9PT0gJ2Z1bmN0aW9uJykgewogICAgY2hpbGQgPSBjaGlsZC5vcHRpb25zOwogIH0KCiAgbm9ybWFsaXplUHJvcHMoY2hpbGQsIHZtKTsKICBub3JtYWxpemVJbmplY3QoY2hpbGQsIHZtKTsKICBub3JtYWxpemVEaXJlY3RpdmVzKGNoaWxkKTsgLy8gQXBwbHkgZXh0ZW5kcyBhbmQgbWl4aW5zIG9uIHRoZSBjaGlsZCBvcHRpb25zLAogIC8vIGJ1dCBvbmx5IGlmIGl0IGlzIGEgcmF3IG9wdGlvbnMgb2JqZWN0IHRoYXQgaXNuJ3QKICAvLyB0aGUgcmVzdWx0IG9mIGFub3RoZXIgbWVyZ2VPcHRpb25zIGNhbGwuCiAgLy8gT25seSBtZXJnZWQgb3B0aW9ucyBoYXMgdGhlIF9iYXNlIHByb3BlcnR5LgoKICBpZiAoIWNoaWxkLl9iYXNlKSB7CiAgICBpZiAoY2hpbGQuZXh0ZW5kcykgewogICAgICBwYXJlbnQgPSBtZXJnZU9wdGlvbnMocGFyZW50LCBjaGlsZC5leHRlbmRzLCB2bSk7CiAgICB9CgogICAgaWYgKGNoaWxkLm1peGlucykgewogICAgICBmb3IgKHZhciBpID0gMCwgbCA9IGNoaWxkLm1peGlucy5sZW5ndGg7IGkgPCBsOyBpKyspIHsKICAgICAgICBwYXJlbnQgPSBtZXJnZU9wdGlvbnMocGFyZW50LCBjaGlsZC5taXhpbnNbaV0sIHZtKTsKICAgICAgfQogICAgfQogIH0KCiAgdmFyIG9wdGlvbnMgPSB7fTsKICB2YXIga2V5OwoKICBmb3IgKGtleSBpbiBwYXJlbnQpIHsKICAgIG1lcmdlRmllbGQoa2V5KTsKICB9CgogIGZvciAoa2V5IGluIGNoaWxkKSB7CiAgICBpZiAoIWhhc093bihwYXJlbnQsIGtleSkpIHsKICAgICAgbWVyZ2VGaWVsZChrZXkpOwogICAgfQogIH0KCiAgZnVuY3Rpb24gbWVyZ2VGaWVsZChrZXkpIHsKICAgIHZhciBzdHJhdCA9IHN0cmF0c1trZXldIHx8IGRlZmF1bHRTdHJhdDsKICAgIG9wdGlvbnNba2V5XSA9IHN0cmF0KHBhcmVudFtrZXldLCBjaGlsZFtrZXldLCB2bSwga2V5KTsKICB9CgogIHJldHVybiBvcHRpb25zOwp9Ci8qKgogKiBSZXNvbHZlIGFuIGFzc2V0LgogKiBUaGlzIGZ1bmN0aW9uIGlzIHVzZWQgYmVjYXVzZSBjaGlsZCBpbnN0YW5jZXMgbmVlZCBhY2Nlc3MKICogdG8gYXNzZXRzIGRlZmluZWQgaW4gaXRzIGFuY2VzdG9yIGNoYWluLgogKi8KCmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQXNzZXQob3B0aW9ucywgdHlwZSwgaWQsIHdhcm5NaXNzaW5nKSB7CiAgLyogaXN0YW5idWwgaWdub3JlIGlmICovCiAgaWYgKHR5cGVvZiBpZCAhPT0gJ3N0cmluZycpIHsKICAgIHJldHVybjsKICB9CgogIHZhciBhc3NldHMgPSBvcHRpb25zW3R5cGVdOyAvLyBjaGVjayBsb2NhbCByZWdpc3RyYXRpb24gdmFyaWF0aW9ucyBmaXJzdAoKICBpZiAoaGFzT3duKGFzc2V0cywgaWQpKSByZXR1cm4gYXNzZXRzW2lkXTsKICB2YXIgY2FtZWxpemVkSWQgPSBjYW1lbGl6ZShpZCk7CiAgaWYgKGhhc093bihhc3NldHMsIGNhbWVsaXplZElkKSkgcmV0dXJuIGFzc2V0c1tjYW1lbGl6ZWRJZF07CiAgdmFyIFBhc2NhbENhc2VJZCA9IGNhcGl0YWxpemUoY2FtZWxpemVkSWQpOwogIGlmIChoYXNPd24oYXNzZXRzLCBQYXNjYWxDYXNlSWQpKSByZXR1cm4gYXNzZXRzW1Bhc2NhbENhc2VJZF07IC8vIGZhbGxiYWNrIHRvIHByb3RvdHlwZSBjaGFpbgoKICB2YXIgcmVzID0gYXNzZXRzW2lkXSB8fCBhc3NldHNbY2FtZWxpemVkSWRdIHx8IGFzc2V0c1tQYXNjYWxDYXNlSWRdOwoKICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB3YXJuTWlzc2luZyAmJiAhcmVzKSB7CiAgICB3YXJuKCdGYWlsZWQgdG8gcmVzb2x2ZSAnICsgdHlwZS5zbGljZSgwLCAtMSkgKyAnOiAnICsgaWQsIG9wdGlvbnMpOwogIH0KCiAgcmV0dXJuIHJlczsKfQ=="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/util/options.js"],"names":["config","warn","set","unicodeLetters","nativeWatch","hasSymbol","ASSET_TYPES","LIFECYCLE_HOOKS","extend","hasOwn","camelize","toRawType","capitalize","isBuiltInTag","isPlainObject","strats","optionMergeStrategies","process","env","NODE_ENV","el","propsData","parent","child","vm","key","defaultStrat","mergeData","to","from","toVal","fromVal","keys","Reflect","ownKeys","Object","i","length","mergeDataOrFn","parentVal","childVal","mergedDataFn","call","mergedInstanceDataFn","instanceData","defaultData","data","mergeHook","res","concat","Array","isArray","dedupeHooks","hooks","indexOf","push","forEach","hook","mergeAssets","create","assertObjectType","type","watch","undefined","ret","props","methods","inject","computed","provide","checkComponents","options","components","validateComponentName","name","RegExp","test","isReservedTag","normalizeProps","val","normalizeInject","normalized","normalizeDirectives","dirs","directives","def","bind","update","value","mergeOptions","_base","extends","mixins","l","mergeField","strat","resolveAsset","id","warnMissing","assets","camelizedId","PascalCaseId","slice"],"mappings":"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","sourcesContent":["/*       */\n\nimport config from '../config'\nimport {warn} from './debug'\nimport {set} from '../observer/index'\nimport {unicodeLetters} from './lang'\nimport {nativeWatch, hasSymbol} from './env'\n\nimport {\n  ASSET_TYPES,\n  LIFECYCLE_HOOKS\n} from '../../shared/constants'\n\nimport {\n  extend,\n  hasOwn,\n  camelize,\n  toRawType,\n  capitalize,\n  isBuiltInTag,\n  isPlainObject\n} from '../../shared/util'\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nconst strats = config.optionMergeStrategies\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        `option \"${key}\" can only be used during instance ` +\n        'creation with the `new` keyword.'\n      )\n    }\n    return defaultStrat(parent, child)\n  }\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData(to, from) {\n  if (!from) return to\n  let key, toVal, fromVal\n\n  const keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from)\n\n  for (let i = 0; i < keys.length; i++) {\n    key = keys[i]\n    // in case the object is already observed...\n    if (key === '__ob__') continue\n    toVal = to[key]\n    fromVal = from[key]\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal)\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal)\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nexport function mergeDataOrFn(\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      const instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal\n      const defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      )\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n}\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook(\n  parentVal,\n  childVal\n) {\n  const res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks(hooks) {\n  const res = []\n  for (let i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i])\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets(\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  const res = Object.create(parentVal || null)\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm)\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets\n})\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) parentVal = undefined\n  if (childVal === nativeWatch) childVal = undefined\n  /* istanbul ignore if */\n  if (!childVal) return Object.create(parentVal || null)\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm)\n  }\n  if (!parentVal) return childVal\n  const ret = {}\n  extend(ret, parentVal)\n  for (const key in childVal) {\n    let parent = ret[key]\n    const child = childVal[key]\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent]\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child]\n  }\n  return ret\n}\n\n/**\n * Other object hashes.\n */\nstrats.props =\n  strats.methods =\n    strats.inject =\n      strats.computed = function (\n        parentVal,\n        childVal,\n        vm,\n        key\n      ) {\n        if (childVal && process.env.NODE_ENV !== 'production') {\n          assertObjectType(key, childVal, vm)\n        }\n        if (!parentVal) return childVal\n        const ret = Object.create(null)\n        extend(ret, parentVal)\n        if (childVal) extend(ret, childVal)\n        return ret\n      }\nstrats.provide = mergeDataOrFn\n\n/**\n * Default strategy.\n */\nconst defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n}\n\n/**\n * Validate component names\n */\nfunction checkComponents(options) {\n  for (const key in options.components) {\n    validateComponentName(key)\n  }\n}\n\nexport function validateComponentName(name) {\n  if (!new RegExp(`^[a-zA-Z][\\\\-\\\\.0-9_${unicodeLetters}]*$`).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    )\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    )\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps(options, vm) {\n  const props = options.props\n  if (!props) return\n  const res = {}\n  let i, val, name\n  if (Array.isArray(props)) {\n    i = props.length\n    while (i--) {\n      val = props[i]\n      if (typeof val === 'string') {\n        name = camelize(val)\n        res[name] = {type: null}\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.')\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (const key in props) {\n      val = props[key]\n      name = camelize(key)\n      res[name] = isPlainObject(val)\n        ? val\n        : {type: val}\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `Invalid value for option \"props\": expected an Array or an Object, ` +\n      `but got ${toRawType(props)}.`,\n      vm\n    )\n  }\n  options.props = res\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject(options, vm) {\n  const inject = options.inject\n  if (!inject) return\n  const normalized = options.inject = {}\n  if (Array.isArray(inject)) {\n    for (let i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = {from: inject[i]}\n    }\n  } else if (isPlainObject(inject)) {\n    for (const key in inject) {\n      const val = inject[key]\n      normalized[key] = isPlainObject(val)\n        ? extend({from: key}, val)\n        : {from: val}\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      `Invalid value for option \"inject\": expected an Array or an Object, ` +\n      `but got ${toRawType(inject)}.`,\n      vm\n    )\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives(options) {\n  const dirs = options.directives\n  if (dirs) {\n    for (const key in dirs) {\n      const def = dirs[key]\n      if (typeof def === 'function') {\n        dirs[key] = {bind: def, update: def}\n      }\n    }\n  }\n}\n\nfunction assertObjectType(name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      `Invalid value for option \"${name}\": expected an Object, ` +\n      `but got ${toRawType(value)}.`,\n      vm\n    )\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nexport function mergeOptions(\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child)\n  }\n\n  if (typeof child === 'function') {\n    child = child.options\n  }\n\n  normalizeProps(child, vm)\n  normalizeInject(child, vm)\n  normalizeDirectives(child)\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm)\n    }\n    if (child.mixins) {\n      for (let i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm)\n      }\n    }\n  }\n\n  const options = {}\n  let key\n  for (key in parent) {\n    mergeField(key)\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key)\n    }\n  }\n\n  function mergeField(key) {\n    const strat = strats[key] || defaultStrat\n    options[key] = strat(parent[key], child[key], vm, key)\n  }\n\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nexport function resolveAsset(\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  const assets = options[type]\n  // check local registration variations first\n  if (hasOwn(assets, id)) return assets[id]\n  const camelizedId = camelize(id)\n  if (hasOwn(assets, camelizedId)) return assets[camelizedId]\n  const PascalCaseId = capitalize(camelizedId)\n  if (hasOwn(assets, PascalCaseId)) return assets[PascalCaseId]\n  // fallback to prototype chain\n  const res = assets[id] || assets[camelizedId] || assets[PascalCaseId]\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    )\n  }\n  return res\n}\n"]}]}