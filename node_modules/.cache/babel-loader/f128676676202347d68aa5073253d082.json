{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/text-parser.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/text-parser.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CgovKiAgICAgICAqLwppbXBvcnQgeyBjYWNoZWQgfSBmcm9tICcuLi8uLi9zaGFyZWQvdXRpbCc7CmltcG9ydCB7IHBhcnNlRmlsdGVycyB9IGZyb20gJy4vZmlsdGVyLXBhcnNlcic7CnZhciBkZWZhdWx0VGFnUkUgPSAvXHtceygoPzoufFxyP1xuKSs/KVx9XH0vZzsKdmFyIHJlZ2V4RXNjYXBlUkUgPSAvWy0uKis/XiR7fSgpfFtcXVwvXFxdL2c7CnZhciBidWlsZFJlZ2V4ID0gY2FjaGVkKGZ1bmN0aW9uIChkZWxpbWl0ZXJzKSB7CiAgdmFyIG9wZW4gPSBkZWxpbWl0ZXJzWzBdLnJlcGxhY2UocmVnZXhFc2NhcGVSRSwgJ1xcJCYnKTsKICB2YXIgY2xvc2UgPSBkZWxpbWl0ZXJzWzFdLnJlcGxhY2UocmVnZXhFc2NhcGVSRSwgJ1xcJCYnKTsKICByZXR1cm4gbmV3IFJlZ0V4cChvcGVuICsgJygoPzoufFxcbikrPyknICsgY2xvc2UsICdnJyk7Cn0pOwpleHBvcnQgZnVuY3Rpb24gcGFyc2VUZXh0KHRleHQsIGRlbGltaXRlcnMpIHsKICB2YXIgdGFnUkUgPSBkZWxpbWl0ZXJzID8gYnVpbGRSZWdleChkZWxpbWl0ZXJzKSA6IGRlZmF1bHRUYWdSRTsKCiAgaWYgKCF0YWdSRS50ZXN0KHRleHQpKSB7CiAgICByZXR1cm47CiAgfQoKICB2YXIgdG9rZW5zID0gW107CiAgdmFyIHJhd1Rva2VucyA9IFtdOwogIHZhciBsYXN0SW5kZXggPSB0YWdSRS5sYXN0SW5kZXggPSAwOwogIHZhciBtYXRjaCwgaW5kZXgsIHRva2VuVmFsdWU7CgogIHdoaWxlIChtYXRjaCA9IHRhZ1JFLmV4ZWModGV4dCkpIHsKICAgIGluZGV4ID0gbWF0Y2guaW5kZXg7IC8vIHB1c2ggdGV4dCB0b2tlbgoKICAgIGlmIChpbmRleCA+IGxhc3RJbmRleCkgewogICAgICByYXdUb2tlbnMucHVzaCh0b2tlblZhbHVlID0gdGV4dC5zbGljZShsYXN0SW5kZXgsIGluZGV4KSk7CiAgICAgIHRva2Vucy5wdXNoKEpTT04uc3RyaW5naWZ5KHRva2VuVmFsdWUpKTsKICAgIH0gLy8gdGFnIHRva2VuCgoKICAgIHZhciBleHAgPSBwYXJzZUZpbHRlcnMobWF0Y2hbMV0udHJpbSgpKTsKICAgIHRva2Vucy5wdXNoKCJfcygiLmNvbmNhdChleHAsICIpIikpOwogICAgcmF3VG9rZW5zLnB1c2goewogICAgICAnQGJpbmRpbmcnOiBleHAKICAgIH0pOwogICAgbGFzdEluZGV4ID0gaW5kZXggKyBtYXRjaFswXS5sZW5ndGg7CiAgfQoKICBpZiAobGFzdEluZGV4IDwgdGV4dC5sZW5ndGgpIHsKICAgIHJhd1Rva2Vucy5wdXNoKHRva2VuVmFsdWUgPSB0ZXh0LnNsaWNlKGxhc3RJbmRleCkpOwogICAgdG9rZW5zLnB1c2goSlNPTi5zdHJpbmdpZnkodG9rZW5WYWx1ZSkpOwogIH0KCiAgcmV0dXJuIHsKICAgIGV4cHJlc3Npb246IHRva2Vucy5qb2luKCcrJyksCiAgICB0b2tlbnM6IHJhd1Rva2VucwogIH07Cn0="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/parser/text-parser.js"],"names":["cached","parseFilters","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","replace","close","RegExp","parseText","text","tagRE","test","tokens","rawTokens","lastIndex","match","index","tokenValue","exec","push","slice","JSON","stringify","exp","trim","length","expression","join"],"mappings":";;;;;;;;AAAA;AAEA,SAAQA,MAAR,QAAqB,mBAArB;AACA,SAAQC,YAAR,QAA2B,iBAA3B;AAEA,IAAMC,YAAY,GAAG,0BAArB;AACA,IAAMC,aAAa,GAAG,wBAAtB;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAAC,UAAAK,UAAU,EAAI;AACtC,MAAMC,IAAI,GAAGD,UAAU,CAAC,CAAD,CAAV,CAAcE,OAAd,CAAsBJ,aAAtB,EAAqC,MAArC,CAAb;AACA,MAAMK,KAAK,GAAGH,UAAU,CAAC,CAAD,CAAV,CAAcE,OAAd,CAAsBJ,aAAtB,EAAqC,MAArC,CAAd;AACA,SAAO,IAAIM,MAAJ,CAAWH,IAAI,GAAG,eAAP,GAAyBE,KAApC,EAA2C,GAA3C,CAAP;AACD,CAJwB,CAAzB;AAOA,OAAO,SAASE,SAAT,CACLC,IADK,EAELN,UAFK,EAGL;AACA,MAAMO,KAAK,GAAGP,UAAU,GAAGD,UAAU,CAACC,UAAD,CAAb,GAA4BH,YAApD;;AACA,MAAI,CAACU,KAAK,CAACC,IAAN,CAAWF,IAAX,CAAL,EAAuB;AACrB;AACD;;AACD,MAAMG,MAAM,GAAG,EAAf;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,SAAS,GAAGJ,KAAK,CAACI,SAAN,GAAkB,CAAlC;AACA,MAAIC,KAAJ,EAAWC,KAAX,EAAkBC,UAAlB;;AACA,SAAQF,KAAK,GAAGL,KAAK,CAACQ,IAAN,CAAWT,IAAX,CAAhB,EAAmC;AACjCO,IAAAA,KAAK,GAAGD,KAAK,CAACC,KAAd,CADiC,CAEjC;;AACA,QAAIA,KAAK,GAAGF,SAAZ,EAAuB;AACrBD,MAAAA,SAAS,CAACM,IAAV,CAAeF,UAAU,GAAGR,IAAI,CAACW,KAAL,CAAWN,SAAX,EAAsBE,KAAtB,CAA5B;AACAJ,MAAAA,MAAM,CAACO,IAAP,CAAYE,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAZ;AACD,KANgC,CAOjC;;;AACA,QAAMM,GAAG,GAAGxB,YAAY,CAACgB,KAAK,CAAC,CAAD,CAAL,CAASS,IAAT,EAAD,CAAxB;AACAZ,IAAAA,MAAM,CAACO,IAAP,cAAkBI,GAAlB;AACAV,IAAAA,SAAS,CAACM,IAAV,CAAe;AAAC,kBAAYI;AAAb,KAAf;AACAT,IAAAA,SAAS,GAAGE,KAAK,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASU,MAA7B;AACD;;AACD,MAAIX,SAAS,GAAGL,IAAI,CAACgB,MAArB,EAA6B;AAC3BZ,IAAAA,SAAS,CAACM,IAAV,CAAeF,UAAU,GAAGR,IAAI,CAACW,KAAL,CAAWN,SAAX,CAA5B;AACAF,IAAAA,MAAM,CAACO,IAAP,CAAYE,IAAI,CAACC,SAAL,CAAeL,UAAf,CAAZ;AACD;;AACD,SAAO;AACLS,IAAAA,UAAU,EAAEd,MAAM,CAACe,IAAP,CAAY,GAAZ,CADP;AAELf,IAAAA,MAAM,EAAEC;AAFH,GAAP;AAID","sourcesContent":["/*       */\n\nimport {cached} from '../../shared/util'\nimport {parseFilters} from './filter-parser'\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nconst regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g\n\nconst buildRegex = cached(delimiters => {\n  const open = delimiters[0].replace(regexEscapeRE, '\\\\$&')\n  const close = delimiters[1].replace(regexEscapeRE, '\\\\$&')\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n})\n\n\nexport function parseText(\n  text,\n  delimiters\n) {\n  const tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE\n  if (!tagRE.test(text)) {\n    return\n  }\n  const tokens = []\n  const rawTokens = []\n  let lastIndex = tagRE.lastIndex = 0\n  let match, index, tokenValue\n  while ((match = tagRE.exec(text))) {\n    index = match.index\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index))\n      tokens.push(JSON.stringify(tokenValue))\n    }\n    // tag token\n    const exp = parseFilters(match[1].trim())\n    tokens.push(`_s(${exp})`)\n    rawTokens.push({'@binding': exp})\n    lastIndex = index + match[0].length\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex))\n    tokens.push(JSON.stringify(tokenValue))\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n"]}]}