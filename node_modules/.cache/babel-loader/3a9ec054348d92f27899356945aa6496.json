{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/create-compiler.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/create-compiler.js","mtime":1596451115000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcudHJpbSI7CgovKiAgICAgICAqLwppbXBvcnQgeyBleHRlbmQgfSBmcm9tICcuLi9zaGFyZWQvdXRpbCc7CmltcG9ydCB7IGRldGVjdEVycm9ycyB9IGZyb20gJy4vZXJyb3ItZGV0ZWN0b3InOwppbXBvcnQgeyBjcmVhdGVDb21waWxlVG9GdW5jdGlvbkZuIH0gZnJvbSAnLi90by1mdW5jdGlvbic7CmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21waWxlckNyZWF0b3IoYmFzZUNvbXBpbGUpIHsKICByZXR1cm4gZnVuY3Rpb24gY3JlYXRlQ29tcGlsZXIoYmFzZU9wdGlvbnMpIHsKICAgIGZ1bmN0aW9uIGNvbXBpbGUodGVtcGxhdGUsIG9wdGlvbnMpIHsKICAgICAgdmFyIGZpbmFsT3B0aW9ucyA9IE9iamVjdC5jcmVhdGUoYmFzZU9wdGlvbnMpOwogICAgICB2YXIgZXJyb3JzID0gW107CiAgICAgIHZhciB0aXBzID0gW107CgogICAgICB2YXIgd2FybiA9IGZ1bmN0aW9uIHdhcm4obXNnLCByYW5nZSwgdGlwKSB7CiAgICAgICAgKHRpcCA/IHRpcHMgOiBlcnJvcnMpLnB1c2gobXNnKTsKICAgICAgfTsKCiAgICAgIGlmIChvcHRpb25zKSB7CiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgb3B0aW9ucy5vdXRwdXRTb3VyY2VSYW5nZSkgewogICAgICAgICAgLy8gJGZsb3ctZGlzYWJsZS1saW5lCiAgICAgICAgICB2YXIgbGVhZGluZ1NwYWNlTGVuZ3RoID0gdGVtcGxhdGUubWF0Y2goL15ccyovKVswXS5sZW5ndGg7CgogICAgICAgICAgd2FybiA9IGZ1bmN0aW9uIHdhcm4obXNnLCByYW5nZSwgdGlwKSB7CiAgICAgICAgICAgIHZhciBkYXRhID0gewogICAgICAgICAgICAgIG1zZzogbXNnCiAgICAgICAgICAgIH07CgogICAgICAgICAgICBpZiAocmFuZ2UpIHsKICAgICAgICAgICAgICBpZiAocmFuZ2Uuc3RhcnQgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgZGF0YS5zdGFydCA9IHJhbmdlLnN0YXJ0ICsgbGVhZGluZ1NwYWNlTGVuZ3RoOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgaWYgKHJhbmdlLmVuZCAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICBkYXRhLmVuZCA9IHJhbmdlLmVuZCArIGxlYWRpbmdTcGFjZUxlbmd0aDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgICh0aXAgPyB0aXBzIDogZXJyb3JzKS5wdXNoKGRhdGEpOwogICAgICAgICAgfTsKICAgICAgICB9IC8vIG1lcmdlIGN1c3RvbSBtb2R1bGVzCgoKICAgICAgICBpZiAob3B0aW9ucy5tb2R1bGVzKSB7CiAgICAgICAgICBmaW5hbE9wdGlvbnMubW9kdWxlcyA9IChiYXNlT3B0aW9ucy5tb2R1bGVzIHx8IFtdKS5jb25jYXQob3B0aW9ucy5tb2R1bGVzKTsKICAgICAgICB9IC8vIG1lcmdlIGN1c3RvbSBkaXJlY3RpdmVzCgoKICAgICAgICBpZiAob3B0aW9ucy5kaXJlY3RpdmVzKSB7CiAgICAgICAgICBmaW5hbE9wdGlvbnMuZGlyZWN0aXZlcyA9IGV4dGVuZChPYmplY3QuY3JlYXRlKGJhc2VPcHRpb25zLmRpcmVjdGl2ZXMgfHwgbnVsbCksIG9wdGlvbnMuZGlyZWN0aXZlcyk7CiAgICAgICAgfSAvLyBjb3B5IG90aGVyIG9wdGlvbnMKCgogICAgICAgIGZvciAodmFyIGtleSBpbiBvcHRpb25zKSB7CiAgICAgICAgICBpZiAoa2V5ICE9PSAnbW9kdWxlcycgJiYga2V5ICE9PSAnZGlyZWN0aXZlcycpIHsKICAgICAgICAgICAgZmluYWxPcHRpb25zW2tleV0gPSBvcHRpb25zW2tleV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBmaW5hbE9wdGlvbnMud2FybiA9IHdhcm47CiAgICAgIHZhciBjb21waWxlZCA9IGJhc2VDb21waWxlKHRlbXBsYXRlLnRyaW0oKSwgZmluYWxPcHRpb25zKTsKCiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7CiAgICAgICAgZGV0ZWN0RXJyb3JzKGNvbXBpbGVkLmFzdCwgd2Fybik7CiAgICAgIH0KCiAgICAgIGNvbXBpbGVkLmVycm9ycyA9IGVycm9yczsKICAgICAgY29tcGlsZWQudGlwcyA9IHRpcHM7CiAgICAgIHJldHVybiBjb21waWxlZDsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBjb21waWxlOiBjb21waWxlLAogICAgICBjb21waWxlVG9GdW5jdGlvbnM6IGNyZWF0ZUNvbXBpbGVUb0Z1bmN0aW9uRm4oY29tcGlsZSkKICAgIH07CiAgfTsKfQ=="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/compiler/create-compiler.js"],"names":["extend","detectErrors","createCompileToFunctionFn","createCompilerCreator","baseCompile","createCompiler","baseOptions","compile","template","options","finalOptions","Object","create","errors","tips","warn","msg","range","tip","push","process","env","NODE_ENV","outputSourceRange","leadingSpaceLength","match","length","data","start","end","modules","concat","directives","key","compiled","trim","ast","compileToFunctions"],"mappings":";;;;;AAAA;AAEA,SAAQA,MAAR,QAAqB,gBAArB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,yBAAR,QAAwC,eAAxC;AAEA,OAAO,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;AACjD,SAAO,SAASC,cAAT,CAAwBC,WAAxB,EAAqC;AAC1C,aAASC,OAAT,CACEC,QADF,EAEEC,OAFF,EAGE;AACA,UAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcN,WAAd,CAArB;AACA,UAAMO,MAAM,GAAG,EAAf;AACA,UAAMC,IAAI,GAAG,EAAb;;AAEA,UAAIC,IAAI,GAAG,cAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,EAAqB;AAC9B,SAACA,GAAG,GAAGJ,IAAH,GAAUD,MAAd,EAAsBM,IAAtB,CAA2BH,GAA3B;AACD,OAFD;;AAIA,UAAIP,OAAJ,EAAa;AACX,YAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCb,OAAO,CAACc,iBAArD,EAAwE;AACtE;AACA,cAAMC,kBAAkB,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,MAAf,EAAuB,CAAvB,EAA0BC,MAArD;;AAEAX,UAAAA,IAAI,GAAG,cAACC,GAAD,EAAMC,KAAN,EAAaC,GAAb,EAAqB;AAC1B,gBAAMS,IAAI,GAAG;AAACX,cAAAA,GAAG,EAAHA;AAAD,aAAb;;AACA,gBAAIC,KAAJ,EAAW;AACT,kBAAIA,KAAK,CAACW,KAAN,IAAe,IAAnB,EAAyB;AACvBD,gBAAAA,IAAI,CAACC,KAAL,GAAaX,KAAK,CAACW,KAAN,GAAcJ,kBAA3B;AACD;;AACD,kBAAIP,KAAK,CAACY,GAAN,IAAa,IAAjB,EAAuB;AACrBF,gBAAAA,IAAI,CAACE,GAAL,GAAWZ,KAAK,CAACY,GAAN,GAAYL,kBAAvB;AACD;AACF;;AACD,aAACN,GAAG,GAAGJ,IAAH,GAAUD,MAAd,EAAsBM,IAAtB,CAA2BQ,IAA3B;AACD,WAXD;AAYD,SAjBU,CAkBX;;;AACA,YAAIlB,OAAO,CAACqB,OAAZ,EAAqB;AACnBpB,UAAAA,YAAY,CAACoB,OAAb,GACE,CAACxB,WAAW,CAACwB,OAAZ,IAAuB,EAAxB,EAA4BC,MAA5B,CAAmCtB,OAAO,CAACqB,OAA3C,CADF;AAED,SAtBU,CAuBX;;;AACA,YAAIrB,OAAO,CAACuB,UAAZ,EAAwB;AACtBtB,UAAAA,YAAY,CAACsB,UAAb,GAA0BhC,MAAM,CAC9BW,MAAM,CAACC,MAAP,CAAcN,WAAW,CAAC0B,UAAZ,IAA0B,IAAxC,CAD8B,EAE9BvB,OAAO,CAACuB,UAFsB,CAAhC;AAID,SA7BU,CA8BX;;;AACA,aAAK,IAAMC,GAAX,IAAkBxB,OAAlB,EAA2B;AACzB,cAAIwB,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,YAAjC,EAA+C;AAC7CvB,YAAAA,YAAY,CAACuB,GAAD,CAAZ,GAAoBxB,OAAO,CAACwB,GAAD,CAA3B;AACD;AACF;AACF;;AAEDvB,MAAAA,YAAY,CAACK,IAAb,GAAoBA,IAApB;AAEA,UAAMmB,QAAQ,GAAG9B,WAAW,CAACI,QAAQ,CAAC2B,IAAT,EAAD,EAAkBzB,YAAlB,CAA5B;;AACA,UAAIU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCrB,QAAAA,YAAY,CAACiC,QAAQ,CAACE,GAAV,EAAerB,IAAf,CAAZ;AACD;;AACDmB,MAAAA,QAAQ,CAACrB,MAAT,GAAkBA,MAAlB;AACAqB,MAAAA,QAAQ,CAACpB,IAAT,GAAgBA,IAAhB;AACA,aAAOoB,QAAP;AACD;;AAED,WAAO;AACL3B,MAAAA,OAAO,EAAPA,OADK;AAEL8B,MAAAA,kBAAkB,EAAEnC,yBAAyB,CAACK,OAAD;AAFxC,KAAP;AAID,GAlED;AAmED","sourcesContent":["/*       */\n\nimport {extend} from '../shared/util'\nimport {detectErrors} from './error-detector'\nimport {createCompileToFunctionFn} from './to-function'\n\nexport function createCompilerCreator(baseCompile) {\n  return function createCompiler(baseOptions) {\n    function compile(\n      template,\n      options\n    ) {\n      const finalOptions = Object.create(baseOptions)\n      const errors = []\n      const tips = []\n\n      let warn = (msg, range, tip) => {\n        (tip ? tips : errors).push(msg)\n      }\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          const leadingSpaceLength = template.match(/^\\s*/)[0].length\n\n          warn = (msg, range, tip) => {\n            const data = {msg}\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength\n              }\n            }\n            (tip ? tips : errors).push(data)\n          }\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules)\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          )\n        }\n        // copy other options\n        for (const key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key]\n          }\n        }\n      }\n\n      finalOptions.warn = warn\n\n      const compiled = baseCompile(template.trim(), finalOptions)\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn)\n      }\n      compiled.errors = errors\n      compiled.tips = tips\n      return compiled\n    }\n\n    return {\n      compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n"]}]}