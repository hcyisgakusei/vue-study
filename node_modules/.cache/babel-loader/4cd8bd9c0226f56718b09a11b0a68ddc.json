{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/watcher.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/watcher.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/observer/watcher.js"],"names":["warn","remove","isObject","parsePath","_Set","Set","handleError","noop","traverse","queueWatcher","Dep","pushTarget","popTarget","uid","Watcher","vm","expOrFn","cb","options","isRenderWatcher","_watcher","_watchers","push","deep","user","lazy","sync","before","id","active","dirty","deps","newDeps","depIds","newDepIds","expression","process","env","NODE_ENV","toString","getter","value","undefined","get","call","e","cleanupDeps","dep","has","add","addSub","i","length","removeSub","tmp","clear","run","oldValue","depend","_isBeingDestroyed"],"mappings":"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","sourcesContent":["/*       */\n\nimport {\n  warn,\n  remove,\n  isObject,\n  parsePath,\n  _Set as Set,\n  handleError,\n  noop\n} from '../util/index'\n\nimport {traverse} from './traverse'\nimport {queueWatcher} from './scheduler'\nimport Dep, {pushTarget, popTarget} from './dep'\n\n\nlet uid = 0\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nexport default class Watcher {\n  vm;\n  expression;\n  cb;\n  id;\n  deep;\n  user;\n  lazy;\n  sync;\n  dirty;\n  active;\n  deps;\n  newDeps;\n  depIds;\n  newDepIds;\n  before;\n  getter;\n  value;\n\n  constructor(\n    vm,\n    expOrFn,\n    cb,\n    options,\n    isRenderWatcher\n  ) {\n    this.vm = vm\n    if (isRenderWatcher) {\n      vm._watcher = this\n    }\n    vm._watchers.push(this)\n    // options\n    if (options) {\n      this.deep = !!options.deep\n      this.user = !!options.user\n      this.lazy = !!options.lazy\n      this.sync = !!options.sync\n      this.before = options.before\n    } else {\n      this.deep = this.user = this.lazy = this.sync = false\n    }\n    this.cb = cb\n    this.id = ++uid // uid for batching\n    this.active = true\n    this.dirty = this.lazy // for lazy watchers\n    this.deps = []\n    this.newDeps = []\n    this.depIds = new Set()\n    this.newDepIds = new Set()\n    this.expression = process.env.NODE_ENV !== 'production'\n      ? expOrFn.toString()\n      : ''\n    // parse expression for getter\n    if (typeof expOrFn === 'function') {\n      this.getter = expOrFn\n    } else {\n      this.getter = parsePath(expOrFn)\n      if (!this.getter) {\n        this.getter = noop\n        process.env.NODE_ENV !== 'production' && warn(\n          `Failed watching path: \"${expOrFn}\" ` +\n          'Watcher only accepts simple dot-delimited paths. ' +\n          'For full control, use a function instead.',\n          vm\n        )\n      }\n    }\n    this.value = this.lazy\n      ? undefined\n      : this.get()\n  }\n\n  /**\n   * Evaluate the getter, and re-collect dependencies.\n   */\n  get() {\n    pushTarget(this)\n    let value\n    const vm = this.vm\n    try {\n      value = this.getter.call(vm, vm)\n    } catch (e) {\n      if (this.user) {\n        handleError(e, vm, `getter for watcher \"${this.expression}\"`)\n      } else {\n        throw e\n      }\n    } finally {\n      // \"touch\" every property so they are all tracked as\n      // dependencies for deep watching\n      if (this.deep) {\n        traverse(value)\n      }\n      popTarget()\n      this.cleanupDeps()\n    }\n    return value\n  }\n\n  /**\n   * Add a dependency to this directive.\n   */\n  addDep(dep) {\n    const id = dep.id\n    if (!this.newDepIds.has(id)) {\n      this.newDepIds.add(id)\n      this.newDeps.push(dep)\n      if (!this.depIds.has(id)) {\n        dep.addSub(this)\n      }\n    }\n  }\n\n  /**\n   * Clean up for dependency collection.\n   */\n  cleanupDeps() {\n    let i = this.deps.length\n    while (i--) {\n      const dep = this.deps[i]\n      if (!this.newDepIds.has(dep.id)) {\n        dep.removeSub(this)\n      }\n    }\n    let tmp = this.depIds\n    this.depIds = this.newDepIds\n    this.newDepIds = tmp\n    this.newDepIds.clear()\n    tmp = this.deps\n    this.deps = this.newDeps\n    this.newDeps = tmp\n    this.newDeps.length = 0\n  }\n\n  /**\n   * Subscriber interface.\n   * Will be called when a dependency changes.\n   */\n  update() {\n    /* istanbul ignore else */\n    if (this.lazy) {\n      this.dirty = true\n    } else if (this.sync) {\n      this.run()\n    } else {\n      queueWatcher(this)\n    }\n  }\n\n  /**\n   * Scheduler job interface.\n   * Will be called by the scheduler.\n   */\n  run() {\n    if (this.active) {\n      const value = this.get()\n      if (\n        value !== this.value ||\n        // Deep watchers and watchers on Object/Arrays should fire even\n        // when the value is the same, because the value may\n        // have mutated.\n        isObject(value) ||\n        this.deep\n      ) {\n        // set new value\n        const oldValue = this.value\n        this.value = value\n        if (this.user) {\n          try {\n            this.cb.call(this.vm, value, oldValue)\n          } catch (e) {\n            handleError(e, this.vm, `callback for watcher \"${this.expression}\"`)\n          }\n        } else {\n          this.cb.call(this.vm, value, oldValue)\n        }\n      }\n    }\n  }\n\n  /**\n   * Evaluate the value of the watcher.\n   * This only gets called for lazy watchers.\n   */\n  evaluate() {\n    this.value = this.get()\n    this.dirty = false\n  }\n\n  /**\n   * Depend on all deps collected by this watcher.\n   */\n  depend() {\n    let i = this.deps.length\n    while (i--) {\n      this.deps[i].depend()\n    }\n  }\n\n  /**\n   * Remove self from all dependencies' subscriber list.\n   */\n  teardown() {\n    if (this.active) {\n      // remove self from vm's watcher list\n      // this is a somewhat expensive operation so we skip it\n      // if the vm is being destroyed.\n      if (!this.vm._isBeingDestroyed) {\n        remove(this.vm._watchers, this)\n      }\n      let i = this.deps.length\n      while (i--) {\n        this.deps[i].removeSub(this)\n      }\n      this.active = false\n    }\n  }\n}\n"]}]}