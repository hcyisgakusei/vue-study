{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/global-api/assets.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/global-api/assets.js","mtime":1596624979635},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaCI7CgovKiAgICAgICAqLwppbXBvcnQgeyBBU1NFVF9UWVBFUyB9IGZyb20gJy4uLy4uL3NoYXJlZC9jb25zdGFudHMnOwppbXBvcnQgeyBpc1BsYWluT2JqZWN0LCB2YWxpZGF0ZUNvbXBvbmVudE5hbWUgfSBmcm9tICcuLi91dGlsL2luZGV4JzsKZXhwb3J0IGZ1bmN0aW9uIGluaXRBc3NldFJlZ2lzdGVycyhWdWUpIHsKICAvKioKICAgKiBDcmVhdGUgYXNzZXQgcmVnaXN0cmF0aW9uIG1ldGhvZHMuCiAgICovCiAgQVNTRVRfVFlQRVMuZm9yRWFjaChmdW5jdGlvbiAodHlwZSkgewogICAgVnVlW3R5cGVdID0gZnVuY3Rpb24gKGlkLCBkZWZpbml0aW9uKSB7CiAgICAgIGlmICghZGVmaW5pdGlvbikgewogICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnNbdHlwZSArICdzJ11baWRdOwogICAgICB9IGVsc2UgewogICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqLwogICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nICYmIHR5cGUgPT09ICdjb21wb25lbnQnKSB7CiAgICAgICAgICB2YWxpZGF0ZUNvbXBvbmVudE5hbWUoaWQpOwogICAgICAgIH0KCiAgICAgICAgaWYgKHR5cGUgPT09ICdjb21wb25lbnQnICYmIGlzUGxhaW5PYmplY3QoZGVmaW5pdGlvbikpIHsKICAgICAgICAgIGRlZmluaXRpb24ubmFtZSA9IGRlZmluaXRpb24ubmFtZSB8fCBpZDsKICAgICAgICAgIGRlZmluaXRpb24gPSB0aGlzLm9wdGlvbnMuX2Jhc2UuZXh0ZW5kKGRlZmluaXRpb24pOwogICAgICAgIH0KCiAgICAgICAgaWYgKHR5cGUgPT09ICdkaXJlY3RpdmUnICYmIHR5cGVvZiBkZWZpbml0aW9uID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgICBkZWZpbml0aW9uID0gewogICAgICAgICAgICBiaW5kOiBkZWZpbml0aW9uLAogICAgICAgICAgICB1cGRhdGU6IGRlZmluaXRpb24KICAgICAgICAgIH07CiAgICAgICAgfQoKICAgICAgICB0aGlzLm9wdGlvbnNbdHlwZSArICdzJ11baWRdID0gZGVmaW5pdGlvbjsKICAgICAgICByZXR1cm4gZGVmaW5pdGlvbjsKICAgICAgfQogICAgfTsKICB9KTsKfQ=="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/global-api/assets.js"],"names":["ASSET_TYPES","isPlainObject","validateComponentName","initAssetRegisters","Vue","forEach","type","id","definition","options","process","env","NODE_ENV","name","_base","extend","bind","update"],"mappings":";;;;AAAA;AAEA,SAAQA,WAAR,QAA0B,wBAA1B;AACA,SAAQC,aAAR,EAAuBC,qBAAvB,QAAmD,eAAnD;AAEA,OAAO,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AACtC;;;AAGAJ,EAAAA,WAAW,CAACK,OAAZ,CAAoB,UAAAC,IAAI,EAAI;AAC1BF,IAAAA,GAAG,CAACE,IAAD,CAAH,GAAY,UACVC,EADU,EAEVC,UAFU,EAGV;AACA,UAAI,CAACA,UAAL,EAAiB;AACf,eAAO,KAAKC,OAAL,CAAaH,IAAI,GAAG,GAApB,EAAyBC,EAAzB,CAAP;AACD,OAFD,MAEO;AACL;AACA,YAAIG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCN,IAAI,KAAK,WAAtD,EAAmE;AACjEJ,UAAAA,qBAAqB,CAACK,EAAD,CAArB;AACD;;AACD,YAAID,IAAI,KAAK,WAAT,IAAwBL,aAAa,CAACO,UAAD,CAAzC,EAAuD;AACrDA,UAAAA,UAAU,CAACK,IAAX,GAAkBL,UAAU,CAACK,IAAX,IAAmBN,EAArC;AACAC,UAAAA,UAAU,GAAG,KAAKC,OAAL,CAAaK,KAAb,CAAmBC,MAAnB,CAA0BP,UAA1B,CAAb;AACD;;AACD,YAAIF,IAAI,KAAK,WAAT,IAAwB,OAAOE,UAAP,KAAsB,UAAlD,EAA8D;AAC5DA,UAAAA,UAAU,GAAG;AAACQ,YAAAA,IAAI,EAAER,UAAP;AAAmBS,YAAAA,MAAM,EAAET;AAA3B,WAAb;AACD;;AACD,aAAKC,OAAL,CAAaH,IAAI,GAAG,GAApB,EAAyBC,EAAzB,IAA+BC,UAA/B;AACA,eAAOA,UAAP;AACD;AACF,KArBD;AAsBD,GAvBD;AAwBD","sourcesContent":["/*       */\n\nimport {ASSET_TYPES} from '../../shared/constants'\nimport {isPlainObject, validateComponentName} from '../util/index'\n\nexport function initAssetRegisters(Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(type => {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id)\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id\n          definition = this.options._base.extend(definition)\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = {bind: definition, update: definition}\n        }\n        this.options[type + 's'][id] = definition\n        return definition\n      }\n    }\n  })\n}\n"]}]}