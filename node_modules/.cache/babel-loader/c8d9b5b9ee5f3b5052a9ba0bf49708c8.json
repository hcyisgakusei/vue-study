{"remainingRequest":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js!/Users/tech/workspace/demo/vue-demo/src/vueResource/core/instance/render-helpers/resolve-slots.js","dependencies":[{"path":"/Users/tech/workspace/demo/vue-demo/src/vueResource/core/instance/render-helpers/resolve-slots.js","mtime":1596450179000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tech/workspace/demo/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwoKLyogICAgICAgKi8KCi8qKgogKiBSdW50aW1lIGhlbHBlciBmb3IgcmVzb2x2aW5nIHJhdyBjaGlsZHJlbiBWTm9kZXMgaW50byBhIHNsb3Qgb2JqZWN0LgogKi8KZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVTbG90cyhjaGlsZHJlbiwgY29udGV4dCkgewogIGlmICghY2hpbGRyZW4gfHwgIWNoaWxkcmVuLmxlbmd0aCkgewogICAgcmV0dXJuIHt9OwogIH0KCiAgdmFyIHNsb3RzID0ge307CgogIGZvciAodmFyIGkgPSAwLCBsID0gY2hpbGRyZW4ubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICB2YXIgY2hpbGQgPSBjaGlsZHJlbltpXTsKICAgIHZhciBkYXRhID0gY2hpbGQuZGF0YTsgLy8gcmVtb3ZlIHNsb3QgYXR0cmlidXRlIGlmIHRoZSBub2RlIGlzIHJlc29sdmVkIGFzIGEgVnVlIHNsb3Qgbm9kZQoKICAgIGlmIChkYXRhICYmIGRhdGEuYXR0cnMgJiYgZGF0YS5hdHRycy5zbG90KSB7CiAgICAgIGRlbGV0ZSBkYXRhLmF0dHJzLnNsb3Q7CiAgICB9IC8vIG5hbWVkIHNsb3RzIHNob3VsZCBvbmx5IGJlIHJlc3BlY3RlZCBpZiB0aGUgdm5vZGUgd2FzIHJlbmRlcmVkIGluIHRoZQogICAgLy8gc2FtZSBjb250ZXh0LgoKCiAgICBpZiAoKGNoaWxkLmNvbnRleHQgPT09IGNvbnRleHQgfHwgY2hpbGQuZm5Db250ZXh0ID09PSBjb250ZXh0KSAmJiBkYXRhICYmIGRhdGEuc2xvdCAhPSBudWxsKSB7CiAgICAgIHZhciBuYW1lID0gZGF0YS5zbG90OwogICAgICB2YXIgc2xvdCA9IHNsb3RzW25hbWVdIHx8IChzbG90c1tuYW1lXSA9IFtdKTsKCiAgICAgIGlmIChjaGlsZC50YWcgPT09ICd0ZW1wbGF0ZScpIHsKICAgICAgICBzbG90LnB1c2guYXBwbHkoc2xvdCwgY2hpbGQuY2hpbGRyZW4gfHwgW10pOwogICAgICB9IGVsc2UgewogICAgICAgIHNsb3QucHVzaChjaGlsZCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIChzbG90cy5kZWZhdWx0IHx8IChzbG90cy5kZWZhdWx0ID0gW10pKS5wdXNoKGNoaWxkKTsKICAgIH0KICB9IC8vIGlnbm9yZSBzbG90cyB0aGF0IGNvbnRhaW5zIG9ubHkgd2hpdGVzcGFjZQoKCiAgZm9yICh2YXIgX25hbWUgaW4gc2xvdHMpIHsKICAgIGlmIChzbG90c1tfbmFtZV0uZXZlcnkoaXNXaGl0ZXNwYWNlKSkgewogICAgICBkZWxldGUgc2xvdHNbX25hbWVdOwogICAgfQogIH0KCiAgcmV0dXJuIHNsb3RzOwp9CgpmdW5jdGlvbiBpc1doaXRlc3BhY2Uobm9kZSkgewogIHJldHVybiBub2RlLmlzQ29tbWVudCAmJiAhbm9kZS5hc3luY0ZhY3RvcnkgfHwgbm9kZS50ZXh0ID09PSAnICc7Cn0KCmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlU2NvcGVkU2xvdHMoZm5zLCAvLyBzZWUgZmxvdy92bm9kZQpyZXMpIHsKICByZXMgPSByZXMgfHwge307CgogIGZvciAodmFyIGkgPSAwOyBpIDwgZm5zLmxlbmd0aDsgaSsrKSB7CiAgICB2YXIgc2xvdCA9IGZuc1tpXTsKCiAgICBpZiAoQXJyYXkuaXNBcnJheShzbG90KSkgewogICAgICByZXNvbHZlU2NvcGVkU2xvdHMoc2xvdCwgcmVzKTsKICAgIH0gZWxzZSB7CiAgICAgIHJlc1tzbG90LmtleV0gPSBzbG90LmZuOwogICAgfQogIH0KCiAgcmV0dXJuIHJlczsKfQ=="},{"version":3,"sources":["/Users/tech/workspace/demo/vue-demo/src/vueResource/core/instance/render-helpers/resolve-slots.js"],"names":["resolveSlots","children","context","length","slots","i","l","child","data","attrs","slot","fnContext","name","tag","push","apply","default","every","isWhitespace","node","isComment","asyncFactory","text","resolveScopedSlots","fns","res","Array","isArray","key","fn"],"mappings":";;AAAA;;AAGA;;;AAGA,OAAO,SAASA,YAAT,CACLC,QADK,EAELC,OAFK,EAGL;AACA,MAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACE,MAA3B,EAAmC;AACjC,WAAO,EAAP;AACD;;AACD,MAAMC,KAAK,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,QAAQ,CAACE,MAA7B,EAAqCE,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAME,KAAK,GAAGN,QAAQ,CAACI,CAAD,CAAtB;AACA,QAAMG,IAAI,GAAGD,KAAK,CAACC,IAAnB,CAF+C,CAG/C;;AACA,QAAIA,IAAI,IAAIA,IAAI,CAACC,KAAb,IAAsBD,IAAI,CAACC,KAAL,CAAWC,IAArC,EAA2C;AACzC,aAAOF,IAAI,CAACC,KAAL,CAAWC,IAAlB;AACD,KAN8C,CAO/C;AACA;;;AACA,QAAI,CAACH,KAAK,CAACL,OAAN,KAAkBA,OAAlB,IAA6BK,KAAK,CAACI,SAAN,KAAoBT,OAAlD,KACFM,IADE,IACMA,IAAI,CAACE,IAAL,IAAa,IADvB,EAEE;AACA,UAAME,IAAI,GAAGJ,IAAI,CAACE,IAAlB;AACA,UAAMA,IAAI,GAAIN,KAAK,CAACQ,IAAD,CAAL,KAAgBR,KAAK,CAACQ,IAAD,CAAL,GAAc,EAA9B,CAAd;;AACA,UAAIL,KAAK,CAACM,GAAN,KAAc,UAAlB,EAA8B;AAC5BH,QAAAA,IAAI,CAACI,IAAL,CAAUC,KAAV,CAAgBL,IAAhB,EAAsBH,KAAK,CAACN,QAAN,IAAkB,EAAxC;AACD,OAFD,MAEO;AACLS,QAAAA,IAAI,CAACI,IAAL,CAAUP,KAAV;AACD;AACF,KAVD,MAUO;AACL,OAACH,KAAK,CAACY,OAAN,KAAkBZ,KAAK,CAACY,OAAN,GAAgB,EAAlC,CAAD,EAAwCF,IAAxC,CAA6CP,KAA7C;AACD;AACF,GA3BD,CA4BA;;;AACA,OAAK,IAAMK,KAAX,IAAmBR,KAAnB,EAA0B;AACxB,QAAIA,KAAK,CAACQ,KAAD,CAAL,CAAYK,KAAZ,CAAkBC,YAAlB,CAAJ,EAAqC;AACnC,aAAOd,KAAK,CAACQ,KAAD,CAAZ;AACD;AACF;;AACD,SAAOR,KAAP;AACD;;AAED,SAASc,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAQA,IAAI,CAACC,SAAL,IAAkB,CAACD,IAAI,CAACE,YAAzB,IAA0CF,IAAI,CAACG,IAAL,KAAc,GAA/D;AACD;;AAED,OAAO,SAASC,kBAAT,CACLC,GADK,EACA;AACLC,GAFK,EAGL;AACAA,EAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;;AACA,OAAK,IAAIpB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,GAAG,CAACrB,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,QAAMK,IAAI,GAAGc,GAAG,CAACnB,CAAD,CAAhB;;AACA,QAAIqB,KAAK,CAACC,OAAN,CAAcjB,IAAd,CAAJ,EAAyB;AACvBa,MAAAA,kBAAkB,CAACb,IAAD,EAAOe,GAAP,CAAlB;AACD,KAFD,MAEO;AACLA,MAAAA,GAAG,CAACf,IAAI,CAACkB,GAAN,CAAH,GAAgBlB,IAAI,CAACmB,EAArB;AACD;AACF;;AACD,SAAOJ,GAAP;AACD","sourcesContent":["/*       */\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nexport function resolveSlots(\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  const slots = {}\n  for (let i = 0, l = children.length; i < l; i++) {\n    const child = children[i]\n    const data = child.data\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      const name = data.slot\n      const slot = (slots[name] || (slots[name] = []))\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || [])\n      } else {\n        slot.push(child)\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child)\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (const name in slots) {\n    if (slots[name].every(isWhitespace)) {\n      delete slots[name]\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace(node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nexport function resolveScopedSlots(\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {}\n  for (let i = 0; i < fns.length; i++) {\n    const slot = fns[i]\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res)\n    } else {\n      res[slot.key] = slot.fn\n    }\n  }\n  return res\n}\n"]}]}